{"version":3,"sources":["views/trailer/trailer.tsx","components/seo/seo.tsx","hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","components/button/button.tsx","hooks/useChangebleState.ts","components/checkbox/checkbox.tsx","components/spotlightContainer/spotlightContainer.tsx","hooks/useThrottledCallback.ts","components/accordion/accordion.tsx","components/radio/radio.tsx","components/select/select.tsx","hooks/useHashTrigger.ts","components/popup/popup.tsx","utils/date.ts","utils/video.ts","components/backButton/backButton.tsx","utils/subtitles.ts","components/media/media.new.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx"],"names":["TrailerView","history","useHistory","useLocation","state","item","trailer","playerProps","useMemo","title","description","poster","posters","wide","big","sources","mapSources","handleOnEnded","useCallback","goBack","onEnded","Seo","props","Helmet","defaultTitle","titleTemplate","useInViewport","target","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","ScrollableContext","createContext","Scrollable","children","className","onScrollToEnd","footerRef","id","value","cx","Provider","ref","Button","icon","iconOnly","autoFocus","wrapperRef","frameId","requestAnimationFrame","focus","cancelAnimationFrame","role","name","useChangebleState","initialState","setState","Checkbox","defaultChecked","checked","onChange","disabled","inputRef","handleChange","e","handleClick","click","onClick","type","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","useThrottledCallback","func","wait","useBaseThrottledCallback","Accordion","open","onToggle","subtitle","visible","setVisible","newVisible","handleClickThrottled","Radio","Select","label","defaultValue","closeOnChange","splitIn","setOpen","val","setVal","opts","Array","isArray","map","option","idx","selectedOption","find","o","handleChanged","handleChecked","opt","useHashTrigger","hash","onClose","onOpen","hasHash","location","includes","push","search","pathname","close","timeoutId","setTimeout","clearTimeout","Popup","closeButton","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setPointerMode","scrollActiveElementIntoView","scrollIntoViewIfNeeded","useButtonEffect","hashTrigger","hidden","spotlightId","spotlightRestrict","spotlightDisabled","secondsToDuration","seconds","formatDuration","leading","formatIdx","mapAudios","audios","ac3ByDefault","savedAudioName","audio","filter","author","toUpper","lang","codec","join","number","default","files","streamingType","savedSourceName","orderBy","file","src","url","http","quality","parseInt","mapSubtitles","subtitles","forcedByDefault","savedSubtitleName","forced","BackButton","handleBackClick","triggerButtonClick","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","charCodeAt","from","a","fetch","converter","getURL","useVideoPlayer","autoPlay","audioTracks","sourceTracks","subtitleTracks","isSettingsOpen","onAudioChange","onSourceChange","onSubtitleChange","videoRef","hlsRef","startTimeRef","isSettingsOpenRef","isLoaded","setIsLoaded","useStorageState","isHLSJSActive","audioTrack","currentAudioTrack","setCurrentAudioTrack","sourceTrack","currentSourceTrack","setCurrentSourceTrack","subtitleTrack","currentSubtitleTrack","setCurrentSubtitleTrack","getAudioTracks","getAudioTrack","setAudioTrack","audioTrackName","audioTrackIndex","findIndex","getSourceTracks","uniqBy","getSourceTrack","setSourceTrack","sourceTrackName","sourceTrackIndex","getSubtitleTracks","getSubtitleTrack","setSubtitleTrack","subtitleTrackName","subtitleTrackIndex","currentAudioTrackIndex","currentSrc","handleMediaLoaded","removeEventListener","currentTime","pause","play","HLS","isSupported","hls","enableWebVTT","enableCEA708Captions","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","destroy","hlsAudioTrack","enabled","firstChild","lastChild","track","mode","removeChild","addSubtitleTrack","document","createElement","appendChild","kind","srclang","endsWith","convertToVTT","Boolean","MEDIA_EVENTS","Media","React","forwardRef","onUpdate","mediaComponent","handleUpdate","eventProps","reduce","args","player","getCurrentTime","setCurrentTime","getPlaybackRate","playbackRate","setPlaybackRate","getPaused","paused","getDuration","duration","getError","networkState","NETWORK_NO_SOURCE","getLoading","readyState","HAVE_ENOUGH_DATA","getProportionLoaded","buffered","length","end","getProportionPlayed","playPause","load","api","useImperativeHandle","useVideoPlayerApi","NONE","Settings","isOpen","setIsOpen","setAudios","currentAudio","setCurrentAudio","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","audioOptions","sourceOptions","source","subtitleOptions","handleVideoUpdate","getVideoNode","handleAudioChange","handleSourceChange","handleSubtitleChange","video","StartFrom","startTime","startInDelay","startIn","setStartIn","startFrom","handleStartFromClick","handleStartFromBeginingClick","intervalId","setInterval","prevStartIn","newStartIn","clearInterval","Player","timeSyncInterval","onPlay","onPause","onTimeSync","playerRef","isPaused","setIsPaused","setIsSettingsOpen","isPauseByOKClickActive","handlePlay","handlePause","handlePlayPause","offsetHeight","offsetWidth","handleEnded","handleTimeSync","handleLoadedMetadata","handleSettingsOpen","handleSettingsClose","handlePauseButton","locale","jumpBy","onLoadedMetadata","videoComponent"],"mappings":"oOAmCeA,EA1Be,WAC5B,IAAMC,EAAUC,cAEhB,EADiBC,cACkBC,OAAS,GAApCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAERC,EAAcC,mBAAqB,WACvC,MAAO,CACLC,MAAOJ,EAAKI,MACZC,YAAa,6CACbC,OAAQN,EAAKO,QAAQC,MAAQR,EAAKO,QAAQE,IAC1CC,QAASC,YAAW,CAACV,OAEtB,CAACD,EAAMC,IAEJW,EAAgBC,uBAAY,WAChCjB,EAAQkB,WACP,CAAClB,IAEJ,OACE,qCACE,cAAC,IAAD,CAAKQ,MAAK,4DAAeJ,EAAKI,MAApB,mDACV,cAAC,IAAD,2BAAYF,GAAZ,IAAyBa,QAASH,U,+FCtBzBI,EAJc,SAACC,GAC5B,OAAO,cAACC,EAAA,EAAD,aAAQC,aAAa,UAAUC,cAAc,sBAAyBH,M,gICsGhEI,EAnGO,SACpBC,EACAL,EACAM,GAEI,IADJC,EACG,uDADM,CAAEC,mBAAmB,GAEtBC,EAAqCT,EAArCS,gBAAiBC,EAAoBV,EAApBU,gBACzB,EAAwBC,qBAAxB,mBAASC,EAAT,KAEMC,EAAWC,iBAAoC,MAE/CC,EAAgBD,kBAAO,GACvBE,EAAcF,kBAAO,GAErBG,EAAgBH,iBAAO,GACvBI,EAAgBJ,iBAAO,GAEvBK,EAAgBvB,uBAAY,WAChC,GAAIS,EAAOe,SAAWP,EAASO,QAAS,CACtC,IAAMC,EAAOC,sBAAYjB,EAAOe,SAC5BC,GACFR,EAASO,QAAQG,QAAQF,MAG5B,CAAChB,EAAQQ,IAENW,EAAe5B,uBAAY,WAC/B,GAAIS,EAAOe,SAAWP,EAASO,QAAS,CACtC,IAAMC,EAAOC,sBAAYjB,EAAOe,SAC5BC,IACFR,EAASO,QAAQK,UAAUJ,GAC3BR,EAASO,QAAQM,aACjBb,EAASO,QAAU,SAGtB,CAACf,EAAQQ,IAENc,EAAqB/B,uBACzB,SAACgC,GACC,IAAMC,EAAQD,EAAQ,IAAM,GACpBE,EAAsCD,EAAtCC,eAAgBC,EAAsBF,EAAtBE,kBAClBC,EAAyC,qBAAnBF,EAAiCA,EAAiBC,EAAoB,EAGlG,IAAKf,EAAYI,SAAWY,EAU1B,OATAhB,EAAYI,SAAU,EAEP,OAAfX,QAAe,IAAfA,OAEAQ,EAAcG,SAAW,EACzBL,EAAcK,QAAUY,OAExBpB,EAAYoB,GAMVhB,EAAYI,UAAYY,IAC1BhB,EAAYI,SAAU,EAEP,OAAfV,QAAe,IAAfA,OAEIH,EAAOC,mBAAqBK,EAASO,SAEvCP,EAASO,QAAQM,aAGnBR,EAAcE,SAAW,EACzBL,EAAcK,QAAUY,EAExBpB,EAAYoB,MAGhB,CAACnB,EAAUN,EAAOC,kBAAmBC,EAAiBC,IAGlDuB,EAA2BrC,uBAAY,WACtCiB,EAASO,UACZP,EAASO,QAAU,IAAIc,qBAAqBP,EAAoBrB,MAEjE,CAACO,EAAUP,EAASqB,IAWvB,OATAQ,qBAAU,WAIR,OAHAF,IACAd,IAEO,WACLK,OAED,CAACS,EAA0Bd,EAAeK,IAEtC,CACLY,WAAYrB,EAAcK,QAC1BiB,WAAYpB,EAAcG,QAC1BkB,WAAYpB,EAAcE,U,SC7FfmB,MAPf,SAAqBC,GACnB,IAAMC,EAAMC,cAGZ,OAFWxD,mBAAQ,2BAASsD,EAAT,YAAmBC,KAAO,CAACD,EAAQC,K,kDCC3CE,EAAoBC,wBAA+B,IA2BjDC,EApBqB,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,cAAkBhD,EAAY,iBAClFiD,EAAYnC,iBAAuB,MACnCoC,EAAKX,EAAY,cACjBY,EAAQjE,mBACZ,iBAAO,CACLgE,QAEF,CAACA,IAKH,OAFA9C,EAAc6C,EAAW,CAAExC,gBAAiBuC,IAG1C,8CAAKD,UAAWK,IAAG,yBAA0BL,IAAgB/C,GAA7D,IAAoEkD,GAAIA,EAAxE,UACE,cAACP,EAAkBU,SAAnB,CAA4BF,MAAOA,EAAnC,SAA2CL,IAC1CE,GAAiB,qBAAKD,UAAU,OAAOO,IAAKL,U,iMCoBpCM,EAnCuB,SAAC,GAA8E,IAA5ET,EAA2E,EAA3EA,SAAUU,EAAiE,EAAjEA,KAAiE,IAA3DC,gBAA2D,OAA/CX,EAA+C,EAArCY,EAAqC,EAArCA,UAAWX,EAA0B,EAA1BA,UAAc/C,EAAY,iBAC5G2D,EAAa7C,iBAA8B,MAmBjD,OAjBAqB,qBAAU,WACR,IAAIyB,EASJ,OAPIF,IACFE,EAAUC,uBAAsB,WAAO,IAAD,IAEpC,UAAAF,EAAWvC,eAAX,mBAAoBC,YAApB,SAA0ByC,YAIvB,WACDF,GACFG,qBAAqBH,MAGxB,CAACD,EAAYD,IAGd,cAAC,IAAD,2BACM1D,GADN,IAEEsD,IAAKK,EACLZ,UAAWK,IAAG,mEAAoEL,GAClFiB,KAAK,SAJP,SAME,sBAAKjB,UAAU,oBAAf,UACGS,GAAQ,cAAC,IAAD,CAAMT,UAAWK,IAAG,CAAE,QAASK,IAAaQ,KAAMT,KACzDC,GAAYX,U,oDC9BPoB,IAVf,SAA8BC,GAC5B,MAA0BxD,mBAASwD,GAAnC,mBAAOrF,EAAP,KAAcsF,EAAd,KAMA,OAJAjC,qBAAU,WACRiC,EAASD,KACR,CAACA,IAEG,CAACrF,EAAOsF,K,0LCkCFC,EA7B2B,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,eAAgBC,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,SAAUzB,EAA8C,EAA9CA,UAAWD,EAAmC,EAAnCA,SAAU2B,EAAyB,EAAzBA,SAAazE,EAAY,iBACtH0E,EAAW5D,iBAAyB,MACpC6D,EAAe/E,uBACnB,SAACgF,GACS,OAARJ,QAAQ,IAARA,KAAWI,EAAEvE,OAAOkE,QAASK,KAE/B,CAACJ,IAEGK,EAAcjF,uBAAY,WAAO,IAAD,EACpC,UAAA8E,EAAStD,eAAT,SAAkB0D,UACjB,IAEH,OACE,eAAC,IAAD,CAAQ/B,UAAWA,EAAWgC,QAASF,EAAaJ,SAAUA,EAA9D,UACE,+CACEO,KAAK,YACDhF,GAFN,IAGEsD,IAAKoB,EACL3B,UAAU,uBACVuB,eAAgBA,EAChBC,QAASA,EACTC,SAAUG,EACVF,SAAUA,KAEZ,sBAAM1B,UAAU,sCAAhB,SAAuDD,S,wGC1B9CmC,EAFYC,IARL,CACpBC,QAAS,kBACTC,eAAgB,aAChBC,SAAU,aACVC,UAAU,EACVC,YAAY,IAGiD,SAACvF,GAAD,OAAiD,mCAASA,Q,oICH1GwF,MAJf,SAA2EC,GAAqD,IAA5CC,EAA2C,uDAA5B,IAAKpF,EAAuB,uCAC7H,OAAOqF,YAAyBF,EAAMC,EAAMpF,I,OC2C/BsF,EA9BoB,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,SAAU3G,EAAqD,EAArDA,MAAO4G,EAA8C,EAA9CA,SAAUhD,EAAoC,EAApCA,UAAWD,EAAyB,EAAzBA,SAAU2B,EAAe,EAAfA,SAC1F,EAA8BP,YAAkB2B,GAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMpB,EAAcjF,uBAAY,WAC9B,IAAK6E,EAAU,CACb,IAAMyB,GAAcF,EACZ,OAARF,QAAQ,IAARA,KAAWI,GACXD,EAAWC,MAEZ,CAACzB,EAAUuB,EAASC,EAAYH,IAE7BK,EAAuBX,EAAqBX,GAElD,OACE,sBAAK9B,UAAU,uBAAf,UACE,cAAC,IAAD,CAAQgC,QAASoB,EAAsBpD,UAAWA,EAAW0B,SAAUA,EAAvE,SACE,sBAAK1B,UAAU,gBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,UAAO5D,KAELsF,GAAY,cAAC,IAAD,CAAMR,KAAM+B,EAAU,cAAgB,oBAEpDA,GAAWD,GAAY,cAAC,IAAD,CAAMhD,UAAU,OAAhB,SAAwBgD,SAGpDC,GAAWlD,O,yIChCHsD,EAJgB,SAACpG,GAC9B,OAAO,cAAC,IAAD,2BAAcA,GAAd,IAAqBgF,KAAK,Y,SCiEpBqB,EAhDiB,SAAC,GAA2G,IAAzGC,EAAwG,EAAxGA,MAAOhG,EAAiG,EAAjGA,QAASiG,EAAwF,EAAxFA,aAAcpD,EAA0E,EAA1EA,MAAOqB,EAAmE,EAAnEA,SAAmE,IAAzDgC,qBAAyD,SAAnCzD,EAAmC,EAAnCA,UAAW0D,EAAwB,EAAxBA,QAAShC,EAAe,EAAfA,SAC1H,EAAwB9D,oBAAS,GAAjC,mBAAOkF,EAAP,KAAaa,EAAb,KACA,EAAsBxC,YAAkBf,GAASoD,GAAjD,mBAAOI,EAAP,KAAYC,EAAZ,KACMC,EAAO3H,mBACX,kBACE4H,MAAMC,QAAQzG,GAAWA,EAAQ0G,KAAI,SAACC,EAAQC,GAAT,MAAoC,kBAAXD,EAAsBA,EAAS,CAAE9H,MAAO8H,EAAQ9D,MAAO+D,MAAU,KACjI,CAAC5G,IAEG6G,EAAiBjI,mBAAQ,kBAAM2H,EAAKO,MAAK,SAACC,GAAD,OAAOA,EAAElE,QAAUwD,OAAM,CAACE,EAAMF,IAEzEW,EAAgB1H,uBACpB,SAACuD,GACCyD,EAAOzD,GACC,OAARqB,QAAQ,IAARA,KAAWrB,GAEPqD,GACFE,GAAQ,KAGZ,CAACE,EAAQpC,EAAUgC,IAEfe,EAAgB3H,uBACpB,SAACqH,GAAD,OAAoB,SAAC1C,GACfA,GACF+C,EAAcL,EAAO9D,UAGzB,CAACmE,IAGH,OACE,cAAC,IAAD,CAAWzB,KAAMA,EAAMC,SAAUY,EAASvH,MAAOmH,EAAOP,SAAQ,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAgBhI,MAAO4D,UAAWA,EAAW0B,SAAUA,EAAzH,SACE,qBAAK1B,UAAU,iBAAf,SACGiE,IAAIH,GAAM,SAACW,GAAD,OACT,cAAC,EAAD,CAEEzE,UAAW0D,EAAO,cAAUA,GAAY,SACxClC,QAASiD,EAAIrE,QAAUwD,EACvBnC,SAAU+C,EAAcC,GAJ1B,SAMGA,EAAIrI,OALAqI,EAAIrE,gB,oKCVNsE,MA9Cf,SAAwBC,EAAcC,EAAoBC,GACxD,IAAMjJ,EAAUC,cACViJ,EAAUjI,uBAAY,kBAAMjB,EAAQmJ,SAASJ,KAAKK,SAASL,KAAO,CAACA,EAAM/I,IAEzEkH,EAAOjG,uBAAY,WAClBiI,KACHlJ,EAAQqJ,KAAK,CACXN,OACA5I,MAAOH,EAAQmJ,SAAShJ,MACxBmJ,OAAQtJ,EAAQmJ,SAASG,OACzBC,SAAUvJ,EAAQmJ,SAASI,WAGzB,OAANN,QAAM,IAANA,SACC,CAACF,EAAMG,EAASlJ,EAASiJ,IAEtBO,EAAQvI,uBAAY,WACpBiI,KACFlJ,EAAQkB,SAEH,OAAP8H,QAAO,IAAPA,SACC,CAACE,EAASlJ,EAASgJ,IAgBtB,OAdAxF,qBAAU,WACR,IAAMiG,EAAYC,YAAW,WACvBR,IACFhC,IAEAsC,MAED,KAEH,OAAO,WACLG,aAAaF,MAEd,CAACP,EAAShC,EAAMsC,EAAOxJ,EAAQmJ,SAASJ,OAEpCxI,mBACL,iBAAO,CACL2G,OACAsC,WAEF,CAACtC,EAAMsC,K,oECuDII,EArFgB,SAAC,GAA+E,IAA7EvC,EAA4E,EAA5EA,QAAS2B,EAAmE,EAAnEA,QAAS7E,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,UAAgD,IAArCyF,mBAAqC,MAAvB,OAAuB,EAAZxI,EAAY,iBACtGyI,EAAcvJ,mBAAQ,kBAAMwJ,IAAUC,IAAI,MAAK,IAC/CC,EAAchJ,uBAAY,WAC9B+H,MACC,CAACA,IAEEkB,EAAuBjJ,uBAAY,WACvC,GAAIoG,EAGF,OAFA4C,KAEO,IAER,CAAC5C,EAAS4C,IAEPE,EAAmBlJ,uBAAY,WACnC,IAAK8I,IAAU5E,MAAM2E,GAAc,CACjC,IAAMrH,EAAUsH,IAAUK,aAKtB3H,GAEFA,EAAQ4H,OAGVN,IAAUO,mBAAmBR,GAC7BJ,YAAW,WACTK,IAAUQ,gBAAe,GACzBR,IAAU5E,MAAM2E,KACf,QAEJ,CAACA,IAEEU,EAA8BvJ,uBAAY,WAC9C,IAAMwB,EAAUsH,IAAUK,aAE1BlF,uBAAsB,WAEb,OAAPzC,QAAO,IAAPA,KAASgI,8BAEV,IAEHC,YAAgB,OAAQR,GACxBQ,YAAgB,UAAWF,GAC3BE,YAAgB,YAAaF,GAC7BE,YAAgBb,EAAaK,GAC7B,IAAMS,EAAc7B,EAAe,QAASoB,GAW5C,OATA1G,qBAAU,WACJ6D,GACF8C,IACAQ,EAAYzD,QAEZyD,EAAYnB,UAEb,CAACnC,EAAS8C,EAAkBQ,IAG7B,qCACE,qBACEvG,UAAWK,IAAG,mEAAoE,CAChFmG,QAASvD,IAEXjB,QAAS6D,IAEX,cAAC,IAAD,2BACM5I,GADN,IAEEwJ,YAAaf,EACbgB,kBAAkB,YAClBC,mBAAoB1D,EACpBjD,UAAWK,IACT,wDACA,CACEmG,QAASvD,GAEXjD,GAVJ,SAaE,cAAC,IAAD,CAAYA,UAAU,eAAtB,SAAsCD,Y,iCC9F9C,wDAEO,SAAS6G,EAAkBC,GAChC,OAAOC,IAAgC,KAAhBD,GAAW,GAAW,CAAEE,SAAS,M,iCCH1D,kLAQMC,EAAY,SAAC7C,GAAD,OAAkBA,EAAM,GAAN,WAAeA,GAAQA,GAEpD,SAAS8C,EAAUC,EAAiBC,EAAwBC,GACjE,OAAOnD,IAAIiD,GAAQ,SAACG,EAAOlD,GAAS,IAAD,cAC3BjD,EAAOoG,IAAO,EAClB,UAAAD,EAAMpF,YAAN,eAAY7F,SAAZ,UAAqBiL,EAAME,cAA3B,aAAqB,EAAcnL,OAAnC,oBAA8CiL,EAAMpF,YAApD,aAA8C,EAAY7F,MAA1D,eAAqEiL,EAAMpF,YAA3E,aAAqE,EAAY7F,MAD/D,UAElBiL,EAAME,cAFY,aAElB,EAAcnL,OACd,UAAAiL,EAAMpF,YAAN,eAAY7F,SAAZ,UAAqBiL,EAAME,cAA3B,aAAqB,EAAcnL,OAAnC,WAA+CoL,IAAQH,EAAMI,MAA7D,KAAwED,IAAQH,EAAMI,MACtE,QAAhBJ,EAAMK,OAAmBF,IAAQH,EAAMK,SACtCC,KAAK,KAGR,MAAO,CACLzG,OACA0G,OAJU,UAAMZ,EAAU7C,EAAM,GAAtB,KAKVsD,KAAMJ,EAAMI,KACZI,QAAUT,GAAkBA,IAAmBlG,IAAWkG,GAAkBD,GAAgC,QAAhBE,EAAMK,UAKjG,SAAS/K,EACdmL,EACAC,EACAC,GAEA,OAAOC,IACLhE,IAAI6D,GAAO,SAACI,GACV,IAAMC,EAA2B,kBAAbD,EAAKE,IAAmBF,EAAKE,IAAMF,EAAKE,IAAIL,IAAmBG,EAAKE,IAAIC,KACtFnH,EAAOgH,EAAKI,QAElB,MAAO,CACLH,MACAjH,OACAe,KAAMkG,EAAInD,SAAS,SAAW,wBAA0B,YACxD6C,QAASG,IAAoB9G,OAGjC,gBAAGA,EAAH,EAAGA,KAAH,OAAcqH,SAASrH,KACvB,QAIG,SAASsH,EAAaC,EAAuBC,EAA2BC,GAC7E,OAAO1E,IAAIwE,GAAW,SAACzF,EAAUmB,GAC/B,IAAMjD,EAAI,UAAMsG,IAAQxE,EAASyE,OAAvB,OAA+BzE,EAAS4F,OAAS,UAAY,IAGvE,MAAO,CACL1H,OACA0G,OAJU,UAAMZ,EAAU7C,EAAM,GAAtB,KAKVgE,IAAKnF,EAASoF,IACdX,KAAMzE,EAASyE,KACfI,QACGc,GAAqBA,IAAsBzH,IAC1CyH,GAAqBD,GAAmB1F,EAAS4F,QAA4B,QAAlB5F,EAASyE,W,mNC7C/DoB,EAZ2B,SAAC,GAA2B,IAAzB7G,EAAwB,EAAxBA,QAAY/E,EAAY,iBAC7D6L,EAAkBjM,uBACtB,SAACgF,GACCkH,YAAmB,QACZ,OAAP/G,QAAO,IAAPA,KAAUH,KAEZ,CAACG,IAGH,OAAO,cAAC,IAAD,yBAAQvB,KAAK,cAAiBxD,GAA9B,IAAqC+E,QAAS8G,M,wGCfjDE,E,WAKJ,WAAYC,GAAiB,yBAJ7BA,cAI4B,OAFpBC,eAEoB,EAC1BC,KAAKF,SAAWA,E,gDAGlB,WAAgB,IAAD,OACb,OAAO,IAAIG,SAAqB,SAACC,EAASC,GACxC,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,WAAW,SAACC,GAAW,IAAD,EACtCC,EAAG,UAAGD,EAAMpM,cAAT,aAAG,EAAcsM,OAC1BP,EAAQ,IAAIQ,WAAWF,OAEzBJ,EAAOE,iBAAiB,SAAS,kBAAMH,EAAO,0CAC9CC,EAAOO,kBAAkB,EAAKb,e,oBAmClC,WAAU,IAAD,OACP,OAAO,IAAIG,SAAgB,SAACC,EAASC,GACnC,OAAM,EAAKL,oBAAoBc,KAC1BP,WACAQ,YACEhB,EAAgBiB,aACrB,EAAKhB,UACL,SAACiB,GACC,IACMC,EADY,sBACKC,OAAOpB,EAAgBqB,MAAMH,IAC9CI,EAAO,IAAIP,KAAK,CAACI,GAAO,CAAElI,KAAM,aAGtC,OAFA,EAAKiH,UAAYqB,IAAIC,gBAAgBF,GAE9BjB,EAAQ,EAAKH,cAEtB,WACE,EAAKuB,eAAeC,MAAK,SAACC,GACxB,IAAMC,EAAU,IAAIZ,YAAY,SAASa,OAAOF,GAE1CR,EADY,sBACKC,OAAOpB,EAAgBqB,MAAMO,IAC9CN,EAAO,IAAIP,KAAK,CAACI,GAAO,CAAElI,KAAM,aAGtC,OAFA,EAAKiH,UAAYqB,IAAIC,gBAAgBF,GAE9BjB,EAAQ,EAAKH,iBAnBDI,EAAO,oCADRA,EAAO,mCADcA,EAAO,kE,qBA4BxD,WACEiB,IAAIC,gBAAgBrB,KAAKD,c,2BA9D3B,SAAoBoB,EAAYQ,EAAiCC,GAC/D,IAAMxB,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,WAAW,SAACC,GAAW,IAAD,EACtCS,EAAI,UAAGT,EAAMpM,cAAT,aAAG,EAAcsM,OAC3BkB,EAAQX,MAEVZ,EAAOE,iBAAiB,SAAS,kBAAMsB,OACvCxB,EAAOyB,WAAWV,K,mBAMpB,SAAaM,GACX,OAAOA,EACJK,QAAQ,iBAAkB,SAC1BA,QAAQ,kBAAmB,QAC3BA,QAAQ,eAAgB,QACxBA,QAAQ,iBAAkB,SAC1BA,QAAQ,6BAA8B,SACtCb,OAAO,c,0BAGZ,SAAoBc,GAClB,IAAMtB,EAAmB,GAIzB,OAHAsB,EAAIC,MAAM,IAAIC,SAAQ,SAACC,GACrBzB,EAAO3E,KAAKsD,SAAS,GAAD,OAAI8C,EAAKC,WAAW,IAAM,QAEzCzB,WAAW0B,KAAK3B,O,iDAsCpB,WAA4BzB,GAA5B,iBAAAqD,EAAA,sEACqBC,MAAMtD,GAD3B,8BACiCmC,OADjC,cACCpC,EADD,OAECwD,EAAY,IAAI1C,EAAgBd,GAFjC,kBAIEwD,EAAUC,UAJZ,4C,oNClBP,SAASC,EAAT,GAUc,IATZC,EASW,EATXA,SACAC,EAQW,EARXA,YACAC,EAOW,EAPXA,aACAC,EAMW,EANXA,eACAjE,EAKW,EALXA,cACAkE,EAIW,EAJXA,eACAC,EAGW,EAHXA,cACAC,EAEW,EAFXA,eACAC,EACW,EADXA,iBAEMC,EAAWtO,iBAAyB,MACpCuO,EAASvO,iBAAmB,MAC5BwO,EAAexO,iBAAO,GACtByO,EAAoBzO,kBAAO,GACjC,EAAgCH,oBAAS,GAAzC,mBAAO6O,EAAP,KAAiBC,EAAjB,KACA,EAAwBC,YAAyB,oBAA1CC,EAAP,oBACA,EAAkDhP,oBAChD,kBAAkB,OAAXkO,QAAW,IAAXA,OAAA,EAAAA,EAAazH,MAAK,SAACwI,GAAD,OAAgBA,EAAWhF,cAA7C,OAAyDiE,QAAzD,IAAyDA,OAAzD,EAAyDA,EAAc,OADhF,mBAAOgB,EAAP,KAA0BC,EAA1B,KAGA,EAAoDnP,oBAClD,kBAAmB,OAAZmO,QAAY,IAAZA,OAAA,EAAAA,EAAc1H,MAAK,SAAC2I,GAAD,OAAiBA,EAAYnF,cAAhD,OAA4DkE,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAe,OADpF,mBAAOkB,EAAP,KAA2BC,EAA3B,KAGA,EAAwDtP,oBACtD,kBAAoB,OAAdoO,QAAc,IAAdA,OAAA,EAAAA,EAAgB3H,MAAK,SAAC8I,GAAD,OAAmBA,EAActF,aAAY,QAD1E,mBAAOuF,EAAP,KAA6BC,EAA7B,KAIMC,EAAiBzQ,uBAAY,iBAAyB,SAAlBkL,EAA2B,GAAK+D,IAAc,CAACA,EAAa/D,IAChGwF,EAAgB1Q,uBAAY,yBAAMiQ,QAAN,IAAMA,OAAN,EAAMA,EAAmB5L,OAAM,CAAC4L,IAC5DU,EAAgB3Q,uBACpB,SAAC4Q,GAA4B,IAAD,EACpBC,EAAe,iBAAG5B,QAAH,IAAGA,OAAH,EAAGA,EAAa6B,WAAU,SAACd,GAAD,OAAgBA,EAAW3L,OAASuM,YAA9D,SAAkF,EACvG,IAAyB,IAArBC,EAAwB,CAC1B,IAAMb,EAAaf,EAAa4B,GAChCX,EAAqBF,GACR,OAAbX,QAAa,IAAbA,KAAgBW,MAGpB,CAACf,EAAaI,IAEV0B,EAAkB/Q,uBAAY,kBAAMgR,IAAO9B,EAAc,SAAQ,CAACA,IAClE+B,EAAiBjR,uBAAY,yBAAMoQ,QAAN,IAAMA,OAAN,EAAMA,EAAoB/L,OAAM,CAAC+L,IAC9Dc,EAAiBlR,uBACrB,SAACmR,GAA6B,IAAD,EACrBC,EAAgB,iBAAGlC,QAAH,IAAGA,OAAH,EAAGA,EAAc4B,WAAU,SAACX,GAAD,OAAiBA,EAAY9L,OAAS8M,YAAjE,SAAsF,EAC5G,IAA0B,IAAtBC,EAAyB,CAC3B,IAAMjB,EAAcjB,EAAckC,GAClCf,EAAsBF,GACR,OAAdb,QAAc,IAAdA,KAAiBa,MAGrB,CAACjB,EAAcI,IAEX+B,EAAoBrR,uBAAY,kBAAMmP,IAAgB,CAACA,IACvDmC,EAAmBtR,uBAAY,yBAAMuQ,QAAN,IAAMA,OAAN,EAAMA,EAAsBlM,OAAM,CAACkM,IAClEgB,EAAmBvR,uBACvB,SAACwR,GAAgC,IAAD,EACxBC,EAAkB,iBAAGtC,QAAH,IAAGA,OAAH,EAAGA,EAAgB2B,WAAU,SAACR,GAAD,OAAmBA,EAAcjM,OAASmN,YAAvE,SAA8F,EAEhHlB,GAAyC,IAAxBmB,GAA6BtC,EAAgBsC,IAAwB,KAC5FjB,EAAwBF,GACR,OAAhBf,QAAgB,IAAhBA,KAAmBe,KAErB,CAACnB,EAAgBI,IAGbmC,EAAyBpS,mBAC7B,yCAAM2P,QAAN,IAAMA,OAAN,EAAMA,EAAa6B,WAAU,SAACd,GAAD,OAAgBA,EAAW3L,OAAS4L,EAAkB5L,eAAnF,QAA4F,IAC5F,CAAC4K,EAAagB,IAEV0B,EAAarS,mBACjB,iBACoB,QAAlB4L,EAAA,OACIkF,QADJ,IACIA,OADJ,EACIA,EAAoB9E,IAAI8C,QAAQ,eAAhC,oBAA6DsD,EAAyB,IAD1F,OAEItB,QAFJ,IAEIA,OAFJ,EAEIA,EAAoB9E,MAC1B,CAACJ,EAAewG,EAAhB,OAAwCtB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAoB9E,MAGxDsG,EAAoB5R,uBAAY,WAChCwP,EAAShO,UACXqO,GAAY,GACZL,EAAShO,QAAQqQ,oBAAoB,UAAWD,GAE5ClC,EAAalO,QAAU,GACzBgO,EAAShO,QAAQsQ,YAAcpC,EAAalO,QAExCmO,EAAkBnO,QACpBgO,EAAShO,QAAQuQ,QAEjBvC,EAAShO,QAAQwQ,QAEVhD,IAAaW,EAAkBnO,SACxCgO,EAAShO,QAAQwQ,UAGpB,CAAChD,IAoGJ,OAlGAzM,qBAAU,WACR,GAAIiN,EAAShO,SAAWmQ,EAAY,CAClC,IAAsB,IAAlB5B,GAA2B4B,EAAWxJ,SAAS,UAAY8J,IAAIC,cAAe,CAChF,IAAMC,EAAO1C,EAAOjO,QAAU,IAAIyQ,IAAI,CACpCG,cAAc,EACdC,sBAAsB,IAExBF,EAAIG,YAAY9C,EAAShO,SACzB2Q,EAAII,GAAGN,IAAIO,OAAOC,gBAAgB,WAChCN,EAAIO,WAAWf,WAGjBnC,EAAShO,QAAQ8J,IAAMqG,EAGzB9B,GAAY,GACZL,EAAShO,QAAQoL,iBAAiB,UAAWgF,GAG/C,OAAO,WACDpC,EAAShO,UACPgO,EAAShO,QAAQsQ,YAAc,IAEjCpC,EAAalO,QAAUgO,EAAShO,QAAQsQ,aAG1CtC,EAAShO,QAAQqQ,oBAAoB,UAAWD,IAE9CnC,EAAOjO,UACTiO,EAAOjO,QAAQmR,UACflD,EAAOjO,QAAU,SAGpB,CAACmQ,EAAY5B,EAAe6B,IAE/BrP,qBAAU,WACR,GAAIqN,EACF,GAAIH,EAAOjO,QAAS,CAAC,IAAD,EACZoR,EAAa,UAAGnD,EAAOjO,QAAQyN,mBAAlB,aAAG,EAA6ByC,GAE/CkB,IACFnD,EAAOjO,QAAQwO,WAAa4C,EAActP,SAEvC,GAAIkM,EAAShO,QAAS,CAAC,IAAD,GAG3B,UAAIgO,EAAShO,QAAQyN,mBAArB,aAAI,EAA+ByC,MAEjCnD,IAAQiB,EAAShO,QAAQyN,aAAa,SAACe,EAAY1I,GACjD0I,EAAW6C,QAAUvL,IAAQoK,KAG/BlC,EAAShO,QAAQsQ,aAAe,MAIrC,CAAClC,EAAU8B,IAEdnP,qBAAU,WACR,GAAIqN,GACEJ,EAAShO,QAAS,CAEpB,KAAOgO,EAAShO,QAAQsR,YAEtBtD,EAAShO,QAAQuR,UAAUC,MAAMC,KAAO,WACxCzD,EAAShO,QAAQ0R,YAAY1D,EAAShO,QAAQuR,WAGhD,GAAIxC,EAAsB,CACxB,IAAM4C,EAAmB,SAAC7H,GACxB,GAAIkE,EAAShO,QAAS,CACpB,IAAMwR,EAAQI,SAASC,cAAc,SACrC7D,EAAShO,QAAQ8R,YAAYN,GAE7BA,EAAM1H,IAAMA,EACZ0H,EAAMO,KAAO,WACbP,EAAM1P,GAAKiN,EAAqBlM,KAChC2O,EAAMtM,MAAQ6J,EAAqBlM,KACnC2O,EAAMQ,QAAUjD,EAAqB3F,KAErCoI,EAAMA,MAAMC,KAAO,YAInB1C,EAAqBjF,IAAImI,SAAS,QDnKzC,SAAP,kCCoKYC,CAAanD,EAAqBjF,KAAKuC,KAAKsF,GAE5CA,EAAiB5C,EAAqBjF,SAK7C,CAACsE,EAAUW,IAEdhO,qBAAU,WACRoN,EAAkBnO,QAAUmS,QAAQvE,KACnC,CAACA,IAEG9P,mBACL,iBAAO,CACLkQ,WACAiB,iBACAC,gBACAC,gBACAI,kBACAE,iBACAC,iBACAG,oBACAC,mBACAC,sBAEF,CACE/B,EACAiB,EACAC,EACAC,EACAI,EACAE,EACAC,EACAG,EACAC,EACAC,IA0LN,IAAMqC,EAAe,CACnB,UACA,YACA,mBACA,mBACA,YACA,cACA,UACA,UACA,eACA,mBACA,cACA,UACA,SACA,YACA,aACA,eACA,WACA,YACA,YACA,YACA,eACA,iBACA,aA4DaC,EArDDC,IAAMC,YAClB,WAgBErQ,GACI,IAfFsL,EAeC,EAfDA,SACAC,EAcC,EAdDA,YACAC,EAaC,EAbDA,aACAC,EAYC,EAZDA,eACAjE,EAWC,EAXDA,cACAkE,EAUC,EAVDA,eACA4E,EASC,EATDA,SACA3E,EAQC,EARDA,cACAC,EAOC,EAPDA,eACAC,EAMC,EANDA,iBACApM,EAKC,EALDA,UAEG/C,GAGF,EAJD6T,eAIC,kBACGC,EAAelU,uBAAY,WACvB,OAARgU,QAAQ,IAARA,SACC,CAACA,IACEG,EAAa7U,mBACjB,kBACEsU,EAAaQ,QACX,SAACrH,EAAQF,GAAT,mBAAC,eACIE,GADL,kBAEGF,GAAQ,WAAqB,IAAD,EAC3BqH,IAD2B,2BAAhBG,EAAgB,yBAAhBA,EAAgB,gBAG3B,UAAAjU,EAAMyM,UAAN,uBAAAzM,GAAK,OAAaiU,UAGtB,MAEJ,CAACjU,EAAO8T,IAEFI,EAxPZ,SAA2B5Q,EAAmCtD,GAC5D,IAAMkU,EAASvF,EAAe3O,GACxBoP,EAAW8E,EAAO9E,SAElB+E,EAAiBvU,uBAAY,WACjC,OAAIwP,EAAShO,QACJgO,EAAShO,QAAQsQ,YAEnB,IACN,CAACtC,IACEgF,EAAiBxU,uBACrB,SAAC8R,GACKtC,EAAShO,UACXgO,EAAShO,QAAQsQ,YAAcA,KAGnC,CAACtC,IAEGiF,EAAkBzU,uBAAY,WAClC,OAAIwP,EAAShO,QACJgO,EAAShO,QAAQkT,aAEnB,IACN,CAAClF,IACEmF,EAAkB3U,uBACtB,SAAC0U,GACKlF,EAAShO,UACXgO,EAAShO,QAAQkT,aAAeA,KAGpC,CAAClF,IAEGoF,EAAY5U,uBAAY,WAC5B,QAAIwP,EAAShO,SACJgO,EAAShO,QAAQqT,SAGzB,CAACrF,IACEsF,EAAc9U,uBAAY,WAC9B,OAAIwP,EAAShO,QACJgO,EAAShO,QAAQuT,SAEnB,IACN,CAACvF,IACEwF,EAAWhV,uBAAY,WAC3B,QAAIwP,EAAShO,SACJgO,EAAShO,QAAQyT,eAAiBzF,EAAShO,QAAQ0T,oBAG3D,CAAC1F,IACE2F,EAAanV,uBAAY,WAC7B,OAAIwP,EAAShO,SACJgO,EAAShO,QAAQ4T,WAAa5F,EAAShO,QAAQ6T,mBAGvD,CAAC7F,IACE8F,EAAsBtV,uBAAY,WACtC,OAAIwP,EAAShO,QAETgO,EAAShO,QAAQ+T,SAASC,QAAUhG,EAAShO,QAAQ+T,SAASE,IAAIjG,EAAShO,QAAQ+T,SAASC,OAAS,GAAKhG,EAAShO,QAAQuT,SAGxH,IACN,CAACvF,IACEkG,EAAsB1V,uBAAY,WACtC,OAAIwP,EAAShO,QACJgO,EAAShO,QAAQsQ,YAActC,EAAShO,QAAQuT,SAElD,IACN,CAACvF,IACEwC,EAAOhS,sBAAW,sBAAC,4BAAA2O,EAAA,gFACjBa,EAAShO,eADQ,aACjB,EAAkBwQ,OADD,2CAEtB,CAACxC,IACEuC,EAAQ/R,uBAAY,WAAO,IAAD,EAC9B,UAAAwP,EAAShO,eAAT,SAAkBuQ,UACjB,CAACvC,IACEmG,EAAY3V,sBAAW,sBAAC,sBAAA2O,EAAA,0DACxBiG,IADwB,gCAEpB5C,IAFoB,6BAI1BD,IAJ0B,2CAM3B,CAACC,EAAMD,EAAO6C,IACXgB,EAAO5V,uBAAY,WAAO,IAAD,EAC7B,UAAAwP,EAAShO,eAAT,SAAkBoU,SACjB,CAACpG,IAEEqG,EAAMvW,mBACV,iBAAO,CACL0S,OACAD,QACA4D,YACAC,OACA,kBACE,OAAOrB,KAET,gBAAgBzC,GACd0C,EAAe1C,IAEjB,kBACE,OAAOwC,EAAO7D,kBAEhB,iBACE,OAAO6D,EAAO5D,iBAEhB,eAAeV,GACbsE,EAAO3D,cAAcX,IAEvB,mBACE,OAAOsE,EAAOvD,mBAEhB,kBACE,OAAOuD,EAAOrD,kBAEhB,gBAAgBd,GACdmE,EAAOpD,eAAef,IAExB,qBACE,OAAOmE,EAAOjD,qBAEhB,oBACE,OAAOiD,EAAOhD,oBAEhB,kBAAkBhB,GAChBgE,EAAO/C,iBAAiBjB,IAE1B,mBACE,OAAOmE,KAET,iBAAiBC,GACfC,EAAgBD,IAElB,aACE,OAAOE,KAET,eACE,OAAOE,KAET,YACE,OAAOE,KAET,cACE,OAAOG,KAET,uBACE,OAAOG,KAET,uBACE,OAAOI,QAGX,CACEpB,EACAtC,EACAD,EACA4D,EACAC,EACArB,EACAC,EACAC,EACAE,EACAC,EACAE,EACAE,EACAG,EACAG,EACAI,IAMJ,OAFAI,8BAAoBpS,GAAK,kBAAMmS,IAAK,CAACA,IAE9BvW,mBACL,iBAAO,CACLuW,MACAvB,YAEF,CAACuB,EAAKvB,IAuEayB,CAAkBrS,EAAK,CACxCsL,WACAC,cACAC,eACAC,iBACAjE,gBACAkE,iBACAC,gBACAC,iBACAC,qBATM+E,OAYR,OAAO,6DAAWlU,GAAW+T,GAAtB,IAAkCnF,UAAU,EAAO7L,UAAWK,IAAG,oBAAqBL,GAAYO,IAAK4Q,EAAO9E,e,+DChiBnHwG,EAAO,OA0HEC,EAlHmB,SAAC,GAAkC,IAAhC7P,EAA+B,EAA/BA,QAAS2B,EAAsB,EAAtBA,QAASuM,EAAa,EAAbA,OACrD,EAA4BvT,mBAASqF,GAArC,mBAAO8P,EAAP,KAAeC,EAAf,KACA,EAA4BpV,mBAAuB,IAAnD,mBAAOsJ,EAAP,KAAe+L,EAAf,KACA,EAAwCrV,mBAAwB,MAAhE,mBAAOsV,EAAP,KAAqBC,EAArB,KACA,EAA8BvV,mBAAwB,IAAtD,mBAAOlB,EAAP,KAAgB0W,EAAhB,KACA,EAA0CxV,mBAAwB,MAAlE,mBAAOyV,EAAP,KAAsBC,EAAtB,KACA,EAAkC1V,mBAA0B,IAA5D,mBAAO6K,EAAP,KAAkB8K,EAAlB,KACA,EAA8C3V,mBAAwBiV,GAAtE,mBAAOW,EAAP,KAAwBC,EAAxB,KAEMC,EAAevX,mBAAQ,kBAAM8H,IAAIiD,GAAQ,SAACG,GAAD,MAAY,CAAEjL,MAAM,GAAD,OAAKiL,EAAMO,OAAX,YAAqBP,EAAMnG,MAAQd,MAAOiH,EAAMnG,WAAU,CAACgG,IACvHyM,EAAgBxX,mBAAQ,kBAAM8H,IAAIvH,GAAS,SAACkX,GAAD,MAAa,CAAExX,MAAOwX,EAAO1S,KAAMd,MAAOwT,EAAO1S,WAAU,CAACxE,IACvGmX,EAAkB1X,mBACtB,kBACE,CAAEC,MAAO,qBAAOgE,MAAOyS,IADzB,mBAEK5O,IAAIwE,GAAW,SAACzF,GAAD,MAAe,CAAE5G,MAAM,GAAD,OAAK4G,EAAS4E,OAAd,YAAwB5E,EAAS9B,MAAQd,MAAO4C,EAAS9B,aAEnG,CAACuH,IAGGqL,EAAoBjX,uBACxB,SAACqE,EAAcd,GACT+Q,EAAO9S,UACU8S,EAAO9S,QAAQ0V,eAE5B7S,GAAQd,KAGlB,CAAC+Q,IAGG6C,EAAoBnX,uBACxB,SAACwK,GACC8L,EAAgB9L,GAChByM,EAAkB,aAAczM,KAElC,CAACyM,IAEGG,EAAqBpX,uBACzB,SAAC+W,GACCN,EAAiBM,GACjBE,EAAkB,cAAeF,KAEnC,CAACE,IAEGI,EAAuBrX,uBAC3B,SAACmG,GACCyQ,EAAmBzQ,GACnB8Q,EAAkB,gBAAiB9Q,KAErC,CAAC8Q,IAGGjO,EAAchJ,uBAAY,WAC9B+H,MACC,CAACA,IAsCJ,OApCAxF,qBAAU,WACR,GAAI6D,GAAWkO,EAAO9S,QAAS,CAC7B,IAAM8V,EAAahD,EAAO9S,QAAQ0V,eAC1BjI,EAAsFqI,EAAtFrI,YAAae,EAAyEsH,EAAzEtH,WAAYd,EAA6DoI,EAA7DpI,aAAciB,EAA+CmH,EAA/CnH,YAAahB,EAAkCmI,EAAlCnI,eAAgBmB,EAAkBgH,EAAlBhH,eAE7D,OAAXrB,QAAW,IAAXA,OAAA,EAAAA,EAAauG,QAAS,IAAiB,OAAZtG,QAAY,IAAZA,OAAA,EAAAA,EAAcsG,QAAS,IAAmB,OAAdrG,QAAc,IAAdA,OAAA,EAAAA,EAAgBqG,QAAS,GAClFY,EAAUnH,GACVqH,EAAgBtG,GAEhBuG,EAAWrH,GACXuH,EAAiBtG,GAEjBuG,EAAavH,GACbyH,EAAmBtG,GAAiB0F,IAEpChN,OAGH,CAAC5C,EAASkO,EAAQtL,IAErBzG,qBAAU,WACR,IAAIiG,EAUJ,OARIpC,EACFoC,EAAYC,YAAW,WACrB0N,GAAU,KACT,KAEHA,GAAU,GAGL,WACLzN,aAAaF,MAEd,CAACpC,IAGF,eAAC,IAAD,CAAOA,QAAS8P,EAAQnO,QAASiB,EAAjC,UACG6N,EAAarB,OAAS,GACrB,cAAC,IAAD,CAAQrS,UAAU,OAAOuD,MAAM,2BAAOnD,MAAO8S,EAAc3V,QAASmW,EAAcjS,SAAUuS,EAAmBtQ,QAAS,IAEzHiQ,EAActB,OAAS,GACtB,cAAC,IAAD,CAAQrS,UAAU,OAAOuD,MAAM,mDAAWnD,MAAOiT,EAAe9V,QAASoW,EAAelS,SAAUwS,EAAoBvQ,QAAS,IAEhImQ,EAAgBxB,OAAS,GACxB,cAAC,IAAD,CACErS,UAAU,OACVuD,MAAM,mDACNnD,MAAOoT,EACPjW,QAASsW,EACTpS,SAAUyS,EACVxQ,QAAS,Q,kBCtDJ0Q,EAvDoB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAA0C,IAA/BC,oBAA+B,MAAhB,EAAgB,EAAbnD,EAAa,EAAbA,OACjE,EAA8BvT,oBAAS,GAAvC,mBAAOqF,EAAP,KAAgBC,EAAhB,KACA,EAA8BtF,mBAAS0W,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAYtY,mBAAQ,kBAAMyK,YAAkByN,KAAY,CAACA,IAEzDK,EAAuB7X,uBAAY,WACnCsU,EAAO9S,UACT6E,GAAW,GACQiO,EAAO9S,QAAQ0V,eAE5BpF,YAAc0F,KAErB,CAACA,EAAWlD,IACTwD,EAA+B9X,uBAAY,WAC/CqG,GAAW,KACV,IAwBH,OAtBA9D,qBAAU,WACR,IAAIwV,EAgBJ,OAdI3R,IACF2R,EAAaC,aAAY,WACvBL,GAAW,SAACM,GACV,IAAMC,EAAaD,EAAc,EAMjC,OAJIC,GAAc,GAChBL,IAGKK,OAER,MAGE,WACLC,cAAcJ,MAEf,CAAC3R,EAASyR,IAERL,GAAcpR,EAKjB,eAAC,IAAD,CAAoByD,kBAAkB,YAAY1G,UAAU,sDAA5D,UACE,eAAC,IAAD,CAAQgC,QAAS0S,EAAjB,qEACcD,EADd,mCACgCF,KAEhC,cAAC,IAAD,CAAQ5T,WAAS,EAACqB,QAAS2S,EAA3B,6GARK,M,2JCsIIM,EA9JuB,SAAC,GAehC,IAdL7Y,EAcI,EAdJA,MACAC,EAaI,EAbJA,YACAC,EAYI,EAZJA,OACA4K,EAWI,EAXJA,OACAxK,EAUI,EAVJA,QACA+L,EASI,EATJA,UACA4L,EAQI,EARJA,UAQI,IAPJa,wBAOI,MAPe,GAOf,EANJnN,EAMI,EANJA,cACAoN,EAKI,EALJA,OACAC,EAII,EAJJA,QACArY,EAGI,EAHJA,QACAsY,EAEI,EAFJA,WACGpY,EACC,iBACEqY,EAAYvX,mBAClB,EAAgCH,oBAAS,GAAzC,mBAAO2X,EAAP,KAAiBC,EAAjB,KACA,EAAgC5X,oBAAS,GAAzC,mBAAO6O,EAAP,KAAiBC,EAAjB,KACA,EAA4C9O,oBAAS,GAArD,mBAAOqO,EAAP,KAAuBwJ,EAAvB,KACA,EAAiC9I,YAAyB,+BAAnD+I,EAAP,oBAEMC,EAAa9Y,uBAAY,WAC7B2Y,GAAY,GACZC,GAAkB,GACZ,OAANN,QAAM,IAANA,SACC,CAACA,IACES,EAAc/Y,uBAClB,SAACgF,GACC2T,GAAY,GACL,OAAPJ,QAAO,IAAPA,KAAUvT,EAAE8M,eAEd,CAACyG,IAEGS,EAAkBhZ,uBACtB,SAACgF,GACC,IAAMxD,EAAesH,IAAUK,aAC/B,KAAM3H,IAAYA,EAAQyX,eAAiBzX,EAAQ0X,cAAgBT,EAAUjX,SAAWqX,EAGtF,OAFmBJ,EAAUjX,QAAQ0V,eAC/BvB,aACC,IAGX,CAAC8C,EAAWI,IAERM,EAAcnZ,uBAClB,SAACgF,GACQ,OAAP9E,QAAO,IAAPA,KAAU8E,EAAEvE,OAAOqR,eAErB,CAAC5R,IAEGkZ,EAAiBpZ,sBAAW,sBAAC,8BAAA2O,EAAA,0DAC7B8J,EAAUjX,UAAWgX,EADQ,uBAEzBlB,EAAamB,EAAUjX,QAAQ0V,eAE/BpF,EAAcwF,EAAK,YAJM,SAMzBkB,EAAW1G,GANc,2CAQhC,CAAC0G,EAAYC,IACVY,GAAuBrZ,uBAAY,WACvC6P,GAAY,KACX,IACGyJ,GAAqBtZ,uBAAY,WACjCyY,EAAUjX,UACZoX,GAAkB,GAECH,EAAUjX,QAAQ0V,eAC/BnF,WAEP,CAAC0G,IACEc,GAAsBvZ,uBAAY,WAClCyY,EAAUjX,UACZoX,GAAkB,GAECH,EAAUjX,QAAQ0V,eAC/BlF,UAEP,IACGwH,GAAoBxZ,uBAAY,WAChCyY,EAAUjX,SACOiX,EAAUjX,QAAQ0V,eAC/BnF,UAEP,CAAC0G,IAuCJ,OArCAlW,qBAAU,WACR,IAAIiG,EAQJ,OANIkQ,IACFlQ,EAAYC,YAAW,WACrBkQ,GAAY,KACX,MAGE,WACDnQ,GACFE,aAAaF,MAGhB,CAACkQ,IAEJnW,qBAAU,WACR,IAAIwV,EAMJ,OAJIS,IACFT,EAAaC,YAAYoB,EAAmC,IAAnBf,IAGpC,WACDN,GACFI,cAAcJ,MAGjB,CAACM,EAAkBG,EAAYY,IAElC3P,YAAgB,OAAQ2P,GACxB3P,YAAgB,OAAQ6P,IACxB7P,YAAgB,OAAQ8P,IACxB9P,YAAgB,QAAS+P,IACzB/P,YAAgB,QAASuP,GACzBvP,YAAgB,UAAW6P,IAGzB,qCACE,cAAC,EAAD,CAAUlT,QAASgJ,EAAgBrH,QAASwR,GAAqBjF,OAAQmE,IACxEC,GACC,sBAAKvV,UAAU,kDAAf,UACE,cAAC,EAAD,CAAYA,UAAU,SACtB,cAAC,IAAD,UAAO5D,OAGVmZ,GAAY,cAAC,IAAD,CAAQvV,UAAU,iDAAiDS,KAAK,WAAWuB,QAASmU,KACxG1J,GAAY4H,EAAa,GAAK,cAAC,EAAD,CAAWA,UAAWA,EAAWlD,OAAQmE,IAExE,cAAC,IAAD,2BACMrY,GADN,IAGEsD,IAAK+U,EACLgB,OAAO,KACPha,OAAQA,EACRF,MAAOC,EACPka,OAAQ,GACRpB,OAAQQ,EACRP,QAASQ,EACT7Y,QAASiZ,EACTQ,iBAAkBN,GAClBnO,cAAeA,EACfkE,eAAgBA,EAChBH,YAAa5E,EACb6E,aAAcrP,EACdsP,eAAgBvD,EAChBgO,eAAgB,cAAC,EAAD","file":"static/js/21.77d34783.chunk.js","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Trailer } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport Seo from 'components/seo';\n\nimport { mapSources } from 'utils/video';\n\nconst TrailerView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ item: ItemDetails; trailer: Trailer }>();\n  const { item, trailer } = location.state || {};\n\n  const playerProps = useMemo<PlayerProps>(() => {\n    return {\n      title: item.title,\n      description: 'Трейлер',\n      poster: item.posters.wide || item.posters.big,\n      sources: mapSources([trailer]),\n    };\n  }, [item, trailer]);\n\n  const handleOnEnded = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <>\n      <Seo title={`Просмотр: ${item.title} - Трейлер`} />\n      <Player {...playerProps} onEnded={handleOnEnded} />\n    </>\n  );\n};\n\nexport default TrailerView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props} id={id}>\n      <ScrollableContext.Provider value={value}>{children}</ScrollableContext.Provider>\n      {onScrollToEnd && <div className=\"h-40\" ref={footerRef} />}\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\nexport type ButtonProps = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<ButtonProps> = ({ children, icon, iconOnly = !children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\n\nimport Button from 'components/button';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n  disabled?: boolean;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, disabled, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleClick = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <Button className={className} onClick={handleClick} disabled={disabled}>\n      <input\n        type=\"checkbox\"\n        {...props}\n        ref={inputRef}\n        className=\"inline-block w-4 h-4\"\n        defaultChecked={defaultChecked}\n        checked={checked}\n        onChange={handleChange}\n        disabled={disabled}\n      />\n      <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n    </Button>\n  );\n};\n\nexport default Checkbox;\n","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useThrottledCallback as useBaseThrottledCallback } from 'use-debounce';\nimport type { CallOptions } from 'use-debounce/lib/useDebouncedCallback';\n\nfunction useThrottledCallback<T extends (...args: any[]) => ReturnType<T>>(func: T, wait: number = 500, options?: CallOptions) {\n  return useBaseThrottledCallback(func, wait, options);\n}\n\nexport default useThrottledCallback;\n","import { useCallback } from 'react';\n\nimport Button from 'components/button';\nimport Icon from 'components/icon';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\nimport useThrottledCallback from 'hooks/useThrottledCallback';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  disabled?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children, disabled }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    if (!disabled) {\n      const newVisible = !visible;\n      onToggle?.(newVisible);\n      setVisible(newVisible);\n    }\n  }, [disabled, visible, setVisible, onToggle]);\n\n  const handleClickThrottled = useThrottledCallback(handleClick);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Button onClick={handleClickThrottled} className={className} disabled={disabled}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            {!disabled && <Icon name={visible ? 'expand_less' : 'expand_more'} />}\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Button>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n  className?: string;\n  splitIn?: 2 | 3 | 4 | 5 | 6;\n  disabled?: boolean;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange = true, className, splitIn, disabled }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'object' ? option : { title: option, value: idx })) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title} className={className} disabled={disabled}>\n      <div className=\"flex flex-wrap\">\n        {map(opts, (opt) => (\n          <Radio\n            key={opt.value}\n            className={splitIn ? `w-1/${splitIn}` : 'w-full'}\n            checked={opt.value === val}\n            onChange={handleChecked(opt)}\n          >\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction useHashTrigger(hash: string, onClose?: Function, onOpen?: Function) {\n  const history = useHistory();\n  const hasHash = useCallback(() => history.location.hash.includes(hash), [hash, history]);\n\n  const open = useCallback(() => {\n    if (!hasHash()) {\n      history.push({\n        hash,\n        state: history.location.state,\n        search: history.location.search,\n        pathname: history.location.pathname,\n      });\n    }\n    onOpen?.();\n  }, [hash, hasHash, history, onOpen]);\n\n  const close = useCallback(() => {\n    if (hasHash()) {\n      history.goBack();\n    }\n    onClose?.();\n  }, [hasHash, history, onClose]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (hasHash()) {\n        open();\n      } else {\n        close();\n      }\n    }, 100);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [hasHash, open, close, history.location.hash]);\n\n  return useMemo(\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n}\n\nexport default useHashTrigger;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport Scrollable from 'components/scrollable';\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect, { KeyboardCodesKeys } from 'hooks/useButtonEffect';\nimport useHashTrigger from 'hooks/useHashTrigger';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  closeButton?: KeyboardCodesKeys;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, children, className, closeButton = 'Blue', ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  const scrollActiveElementIntoView = useCallback(() => {\n    const current = Spotlight.getCurrent();\n\n    requestAnimationFrame(() => {\n      // @ts-expect-error\n      current?.scrollIntoViewIfNeeded();\n    });\n  }, []);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect('ArrowUp', scrollActiveElementIntoView);\n  useButtonEffect('ArrowDown', scrollActiveElementIntoView);\n  useButtonEffect(closeButton, handleCloseIfVisible);\n  const hashTrigger = useHashTrigger('popup', handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n      hashTrigger.open();\n    } else {\n      hashTrigger.close();\n    }\n  }, [visible, spotPopupContent, hashTrigger]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      >\n        <Scrollable className=\"max-h-screen\">{children}</Scrollable>\n      </SpotlightContainer>\n    </>\n  );\n};\n\nexport default Popup;\n","import formatDuration from 'format-duration';\n\nexport function secondsToDuration(seconds?: number) {\n  return formatDuration((seconds || 0) * 1000, { leading: true });\n}\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[], ac3ByDefault?: boolean, savedAudioName?: string): AudioTrack[] {\n  return map(audios, (audio, idx) => {\n    const name = filter([\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec === 'ac3' && toUpper(audio.codec),\n    ]).join(' ');\n    const number = `${formatIdx(idx + 1)}.`;\n\n    return {\n      name,\n      number,\n      lang: audio.lang,\n      default: (savedAudioName && savedAudioName === name) || (!savedAudioName && ac3ByDefault && audio.codec === 'ac3'),\n    };\n  });\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n  savedSourceName?: string,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => {\n      const src = (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http!) as string;\n      const name = file.quality!;\n\n      return {\n        src,\n        name,\n        type: src.includes('.m3u8') ? 'application/x-mpegURL' : 'video/mp4',\n        default: savedSourceName === name,\n      };\n    }),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[], forcedByDefault?: boolean, savedSubtitleName?: string): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => {\n    const name = `${toUpper(subtitle.lang)}${subtitle.forced ? ' Forced' : ''}`;\n    const number = `${formatIdx(idx + 1)}.`;\n\n    return {\n      name,\n      number,\n      src: subtitle.url,\n      lang: subtitle.lang,\n      default:\n        (savedSubtitleName && savedSubtitleName === name) ||\n        (!savedSubtitleName && forcedByDefault && subtitle.forced && subtitle.lang === 'rus'),\n    };\n  });\n}\n","import { useCallback } from 'react';\n\nimport Button, { ButtonProps } from 'components/button';\n\nimport { triggerButtonClick } from 'utils/keyboard';\n\nconst BackButton: React.FC<ButtonProps> = ({ onClick, ...props }) => {\n  const handleBackClick = useCallback<React.MouseEventHandler<HTMLElement>>(\n    (e) => {\n      triggerButtonClick('Back');\n      onClick?.(e);\n    },\n    [onClick],\n  );\n\n  return <Button icon=\"arrow_back\" {...props} onClick={handleBackClick} />;\n};\n\nexport default BackButton;\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport HLS from 'hls.js';\nimport forEach from 'lodash/forEach';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useStorageState from 'hooks/useStorageState';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  number: string;\n  lang: string;\n  default?: boolean;\n};\n\nexport type SourceTrack = {\n  src: string;\n  type: string;\n  name: string;\n  default?: boolean;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  number: string;\n  lang: string;\n  default?: boolean;\n};\n\nexport type StreamingType = 'http' | 'hls' | 'hls2' | 'hls4';\n\ntype OwnProps = {\n  autoPlay?: boolean;\n  audioTracks?: AudioTrack[];\n  sourceTracks?: SourceTrack[];\n  subtitleTracks?: SubtitleTrack[];\n  streamingType?: StreamingType;\n  isSettingsOpen?: boolean;\n  mediaComponent?: string;\n  onUpdate?: () => void;\n  onAudioChange?: (audioTrack: AudioTrack) => void;\n  onSourceChange?: (sourceTrack: SourceTrack) => void;\n  onSubtitleChange?: (subtitleTrack: SubtitleTrack | null) => void;\n};\n\nexport type MediaRef = {\n  play: () => Promise<void>;\n  pause: () => void;\n  playPause: () => Promise<void>;\n  load: () => void;\n  currentTime: number;\n  playbackRate: number;\n  audioTracks?: AudioTrack[];\n  audioTrack?: string;\n  sourceTracks?: SourceTrack[];\n  sourceTrack?: string;\n  subtitleTracks?: SubtitleTrack[];\n  subtitleTrack?: string;\n  readonly duration: number;\n  readonly error: boolean;\n  readonly loading: boolean;\n  readonly paused: boolean;\n  readonly proportionLoaded: number;\n  readonly proportionPlayed: number;\n};\n\nfunction useVideoPlayer({\n  autoPlay,\n  audioTracks,\n  sourceTracks,\n  subtitleTracks,\n  streamingType,\n  isSettingsOpen,\n  onAudioChange,\n  onSourceChange,\n  onSubtitleChange,\n}: OwnProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const hlsRef = useRef<HLS | null>(null);\n  const startTimeRef = useRef(0);\n  const isSettingsOpenRef = useRef(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isHLSJSActive] = useStorageState<boolean>('is_hls.js_active');\n  const [currentAudioTrack, setCurrentAudioTrack] = useState<AudioTrack>(\n    () => (audioTracks?.find((audioTrack) => audioTrack.default) || audioTracks?.[0])!,\n  );\n  const [currentSourceTrack, setCurrentSourceTrack] = useState<SourceTrack>(\n    () => (sourceTracks?.find((sourceTrack) => sourceTrack.default) || sourceTracks?.[0])!,\n  );\n  const [currentSubtitleTrack, setCurrentSubtitleTrack] = useState<SubtitleTrack | null>(\n    () => subtitleTracks?.find((subtitleTrack) => subtitleTrack.default) || null,\n  );\n\n  const getAudioTracks = useCallback(() => (streamingType === 'hls2' ? [] : audioTracks), [audioTracks, streamingType]);\n  const getAudioTrack = useCallback(() => currentAudioTrack?.name, [currentAudioTrack]);\n  const setAudioTrack = useCallback(\n    (audioTrackName: string) => {\n      const audioTrackIndex = audioTracks?.findIndex((audioTrack) => audioTrack.name === audioTrackName) ?? -1;\n      if (audioTrackIndex !== -1) {\n        const audioTrack = audioTracks![audioTrackIndex];\n        setCurrentAudioTrack(audioTrack);\n        onAudioChange?.(audioTrack);\n      }\n    },\n    [audioTracks, onAudioChange],\n  );\n  const getSourceTracks = useCallback(() => uniqBy(sourceTracks, 'src'), [sourceTracks]);\n  const getSourceTrack = useCallback(() => currentSourceTrack?.name, [currentSourceTrack]);\n  const setSourceTrack = useCallback(\n    (sourceTrackName: string) => {\n      const sourceTrackIndex = sourceTracks?.findIndex((sourceTrack) => sourceTrack.name === sourceTrackName) ?? -1;\n      if (sourceTrackIndex !== -1) {\n        const sourceTrack = sourceTracks![sourceTrackIndex];\n        setCurrentSourceTrack(sourceTrack);\n        onSourceChange?.(sourceTrack);\n      }\n    },\n    [sourceTracks, onSourceChange],\n  );\n  const getSubtitleTracks = useCallback(() => subtitleTracks, [subtitleTracks]);\n  const getSubtitleTrack = useCallback(() => currentSubtitleTrack?.name, [currentSubtitleTrack]);\n  const setSubtitleTrack = useCallback(\n    (subtitleTrackName?: string) => {\n      const subtitleTrackIndex = subtitleTracks?.findIndex((subtitleTrack) => subtitleTrack.name === subtitleTrackName) ?? -1;\n\n      const subtitleTrack = (subtitleTrackIndex !== -1 && subtitleTracks![subtitleTrackIndex]) || null;\n      setCurrentSubtitleTrack(subtitleTrack);\n      onSubtitleChange?.(subtitleTrack);\n    },\n    [subtitleTracks, onSubtitleChange],\n  );\n\n  const currentAudioTrackIndex = useMemo(\n    () => audioTracks?.findIndex((audioTrack) => audioTrack.name === currentAudioTrack.name) ?? 0,\n    [audioTracks, currentAudioTrack],\n  );\n  const currentSrc = useMemo(\n    () =>\n      streamingType === 'hls'\n        ? currentSourceTrack?.src.replace(/master-v1a\\d/, `master-v1a${currentAudioTrackIndex + 1}`)\n        : currentSourceTrack?.src,\n    [streamingType, currentAudioTrackIndex, currentSourceTrack?.src],\n  );\n\n  const handleMediaLoaded = useCallback(() => {\n    if (videoRef.current) {\n      setIsLoaded(true);\n      videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n\n      if (startTimeRef.current > 0) {\n        videoRef.current.currentTime = startTimeRef.current;\n\n        if (isSettingsOpenRef.current) {\n          videoRef.current.pause();\n        } else {\n          videoRef.current.play();\n        }\n      } else if (autoPlay && !isSettingsOpenRef.current) {\n        videoRef.current.play();\n      }\n    }\n  }, [autoPlay]);\n\n  useEffect(() => {\n    if (videoRef.current && currentSrc) {\n      if (isHLSJSActive !== false && currentSrc.includes('.m3u8') && HLS.isSupported()) {\n        const hls = (hlsRef.current = new HLS({\n          enableWebVTT: false,\n          enableCEA708Captions: false,\n        }));\n        hls.attachMedia(videoRef.current);\n        hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n          hls.loadSource(currentSrc);\n        });\n      } else {\n        videoRef.current.src = currentSrc;\n      }\n\n      setIsLoaded(false);\n      videoRef.current.addEventListener('canplay', handleMediaLoaded);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        if (videoRef.current.currentTime > 0) {\n          // eslint-disable-next-line\n          startTimeRef.current = videoRef.current.currentTime;\n        }\n        // eslint-disable-next-line\n        videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n      }\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [currentSrc, isHLSJSActive, handleMediaLoaded]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      if (hlsRef.current) {\n        const hlsAudioTrack = hlsRef.current.audioTracks?.[currentAudioTrackIndex];\n\n        if (hlsAudioTrack) {\n          hlsRef.current.audioTrack = hlsAudioTrack.id;\n        }\n      } else if (videoRef.current) {\n        // Do not change audio if we don't have it (mostly on HLS)\n        // @ts-expect-error\n        if (videoRef.current.audioTracks?.[currentAudioTrackIndex]) {\n          // @ts-expect-error\n          forEach(videoRef.current.audioTracks, (audioTrack, idx: number) => {\n            audioTrack.enabled = idx === currentAudioTrackIndex;\n          });\n\n          videoRef.current.currentTime -= 1;\n        }\n      }\n    }\n  }, [isLoaded, currentAudioTrackIndex]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      if (videoRef.current) {\n        // clear existing subtitles\n        while (videoRef.current.firstChild) {\n          // @ts-expect-error\n          videoRef.current.lastChild.track.mode = 'disabled';\n          videoRef.current.removeChild(videoRef.current.lastChild!);\n        }\n\n        if (currentSubtitleTrack) {\n          const addSubtitleTrack = (src: string) => {\n            if (videoRef.current) {\n              const track = document.createElement('track');\n              videoRef.current.appendChild(track);\n\n              track.src = src;\n              track.kind = 'captions';\n              track.id = currentSubtitleTrack.name;\n              track.label = currentSubtitleTrack.name;\n              track.srclang = currentSubtitleTrack.lang;\n\n              track.track.mode = 'showing';\n            }\n          };\n\n          if (currentSubtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(currentSubtitleTrack.src).then(addSubtitleTrack);\n          } else {\n            addSubtitleTrack(currentSubtitleTrack.src);\n          }\n        }\n      }\n    }\n  }, [isLoaded, currentSubtitleTrack]);\n\n  useEffect(() => {\n    isSettingsOpenRef.current = Boolean(isSettingsOpen);\n  }, [isSettingsOpen]);\n\n  return useMemo(\n    () => ({\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    }),\n    [\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    ],\n  );\n}\n\nfunction useVideoPlayerApi(ref: React.ForwardedRef<MediaRef>, props: OwnProps) {\n  const player = useVideoPlayer(props);\n  const videoRef = player.videoRef;\n\n  const getCurrentTime = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime;\n    }\n    return 0;\n  }, [videoRef]);\n  const setCurrentTime = useCallback(\n    (currentTime: number) => {\n      if (videoRef.current) {\n        videoRef.current.currentTime = currentTime;\n      }\n    },\n    [videoRef],\n  );\n  const getPlaybackRate = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.playbackRate;\n    }\n    return 1;\n  }, [videoRef]);\n  const setPlaybackRate = useCallback(\n    (playbackRate: number) => {\n      if (videoRef.current) {\n        videoRef.current.playbackRate = playbackRate;\n      }\n    },\n    [videoRef],\n  );\n  const getPaused = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.paused;\n    }\n    return false;\n  }, [videoRef]);\n  const getDuration = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const getError = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.networkState === videoRef.current.NETWORK_NO_SOURCE;\n    }\n    return false;\n  }, [videoRef]);\n  const getLoading = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.readyState < videoRef.current.HAVE_ENOUGH_DATA;\n    }\n    return true;\n  }, [videoRef]);\n  const getProportionLoaded = useCallback(() => {\n    if (videoRef.current) {\n      return (\n        videoRef.current.buffered.length && videoRef.current.buffered.end(videoRef.current.buffered.length - 1) / videoRef.current.duration\n      );\n    }\n    return 0;\n  }, [videoRef]);\n  const getProportionPlayed = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime / videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const play = useCallback(async () => {\n    await videoRef.current?.play();\n  }, [videoRef]);\n  const pause = useCallback(() => {\n    videoRef.current?.pause();\n  }, [videoRef]);\n  const playPause = useCallback(async () => {\n    if (getPaused()) {\n      await play();\n    } else {\n      pause();\n    }\n  }, [play, pause, getPaused]);\n  const load = useCallback(() => {\n    videoRef.current?.load();\n  }, [videoRef]);\n\n  const api = useMemo<MediaRef>(\n    () => ({\n      play,\n      pause,\n      playPause,\n      load,\n      get currentTime() {\n        return getCurrentTime();\n      },\n      set currentTime(currentTime) {\n        setCurrentTime(currentTime);\n      },\n      get audioTracks() {\n        return player.getAudioTracks();\n      },\n      get audioTrack() {\n        return player.getAudioTrack();\n      },\n      set audioTrack(audioTrack) {\n        player.setAudioTrack(audioTrack);\n      },\n      get sourceTracks() {\n        return player.getSourceTracks();\n      },\n      get sourceTrack() {\n        return player.getSourceTrack();\n      },\n      set sourceTrack(sourceTrack) {\n        player.setSourceTrack(sourceTrack);\n      },\n      get subtitleTracks() {\n        return player.getSubtitleTracks();\n      },\n      get subtitleTrack() {\n        return player.getSubtitleTrack();\n      },\n      set subtitleTrack(subtitleTrack) {\n        player.setSubtitleTrack(subtitleTrack);\n      },\n      get playbackRate() {\n        return getPlaybackRate();\n      },\n      set playbackRate(playbackRate) {\n        setPlaybackRate(playbackRate);\n      },\n      get paused() {\n        return getPaused();\n      },\n      get duration() {\n        return getDuration();\n      },\n      get error() {\n        return getError();\n      },\n      get loading() {\n        return getLoading();\n      },\n      get proportionLoaded() {\n        return getProportionLoaded();\n      },\n      get proportionPlayed() {\n        return getProportionPlayed();\n      },\n    }),\n    [\n      player,\n      play,\n      pause,\n      playPause,\n      load,\n      getCurrentTime,\n      setCurrentTime,\n      getPlaybackRate,\n      setPlaybackRate,\n      getPaused,\n      getDuration,\n      getError,\n      getLoading,\n      getProportionLoaded,\n      getProportionPlayed,\n    ],\n  );\n\n  useImperativeHandle(ref, () => api, [api]);\n\n  return useMemo(\n    () => ({\n      api,\n      player,\n    }),\n    [api, player],\n  );\n}\n\nconst MEDIA_EVENTS = [\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onError',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n] as const;\n\ntype MediaEvents = keyof typeof MEDIA_EVENTS;\n\nexport type MediaProps = OwnProps & React.HTMLAttributes<HTMLVideoElement>;\n\nconst Media = React.forwardRef<MediaRef, MediaProps>(\n  (\n    {\n      autoPlay,\n      audioTracks,\n      sourceTracks,\n      subtitleTracks,\n      streamingType,\n      isSettingsOpen,\n      onUpdate,\n      onAudioChange,\n      onSourceChange,\n      onSubtitleChange,\n      className,\n      mediaComponent,\n      ...props\n    },\n    ref,\n  ) => {\n    const handleUpdate = useCallback(() => {\n      onUpdate?.();\n    }, [onUpdate]);\n    const eventProps = useMemo(\n      () =>\n        MEDIA_EVENTS.reduce<Partial<Record<MediaEvents, Function>>>(\n          (result, event) => ({\n            ...result,\n            [event]: (...args: any[]) => {\n              handleUpdate();\n              // @ts-expect-error\n              props[event]?.(...args);\n            },\n          }),\n          {},\n        ),\n      [props, handleUpdate],\n    );\n    const { player } = useVideoPlayerApi(ref, {\n      autoPlay,\n      audioTracks,\n      sourceTracks,\n      subtitleTracks,\n      streamingType,\n      isSettingsOpen,\n      onAudioChange,\n      onSourceChange,\n      onSubtitleChange,\n    });\n\n    return <video {...props} {...eventProps} autoPlay={false} className={cx('w-screen h-screen', className)} ref={player.videoRef} />;\n  },\n);\n\nexport default Media;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Popup from 'components/popup';\nimport Select from 'components/select';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ visible, onClose, player }) => {\n  const [isOpen, setIsOpen] = useState(visible);\n  const [audios, setAudios] = useState<AudioTrack[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<SourceTrack[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<SubtitleTrack[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(NONE);\n\n  const audioOptions = useMemo(() => map(audios, (audio) => ({ title: `${audio.number} ${audio.name}`, value: audio.name })), [audios]);\n  const sourceOptions = useMemo(() => map(sources, (source) => ({ title: source.name, value: source.name })), [sources]);\n  const subtitleOptions = useMemo(\n    () => [\n      { title: 'Нет', value: NONE },\n      ...map(subtitles, (subtitle) => ({ title: `${subtitle.number} ${subtitle.name}`, value: subtitle.name })),\n    ],\n    [subtitles],\n  );\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  useEffect(() => {\n    if (visible && player.current) {\n      const video: any = player.current.getVideoNode();\n      const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n      if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n        setAudios(audioTracks);\n        setCurrentAudio(audioTrack);\n\n        setSources(sourceTracks);\n        setCurrentSource(sourceTrack);\n\n        setSubtitles(subtitleTracks);\n        setCurrentSubtitle(subtitleTrack || NONE);\n      } else {\n        handleClose();\n      }\n    }\n  }, [visible, player, handleClose]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (visible) {\n      timeoutId = setTimeout(() => {\n        setIsOpen(true);\n      }, 100);\n    } else {\n      setIsOpen(false);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [visible]);\n\n  return (\n    <Popup visible={isOpen} onClose={handleClose}>\n      {audioOptions.length > 1 && (\n        <Select className=\"my-1\" label=\"Звук\" value={currentAudio} options={audioOptions} onChange={handleAudioChange} splitIn={2} />\n      )}\n      {sourceOptions.length > 1 && (\n        <Select className=\"my-1\" label=\"Качество\" value={currentSource} options={sourceOptions} onChange={handleSourceChange} splitIn={4} />\n      )}\n      {subtitleOptions.length > 1 && (\n        <Select\n          className=\"my-1\"\n          label=\"Субтитры\"\n          value={currentSubtitle}\n          options={subtitleOptions}\n          onChange={handleSubtitleChange}\n          splitIn={4}\n        />\n      )}\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\nimport SpotlightContainer from 'components/spotlightContainer';\n\nimport { secondsToDuration } from 'utils/date';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => secondsToDuration(startTime), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <SpotlightContainer spotlightRestrict=\"self-only\" className=\"flex justify-center absolute w-full z-101 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </SpotlightContainer>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\nimport Spotlight from '@enact/spotlight';\n\nimport BackButton from 'components/backButton';\nimport Button from 'components/button';\nimport Media, { AudioTrack, SourceTrack, StreamingType, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\nimport useStorageState from 'hooks/useStorageState';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  streamingType?: StreamingType;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  streamingType,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isPaused, setIsPaused] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isPauseByOKClickActive] = useStorageState<boolean>('is_pause_by_ok_click_active');\n\n  const handlePlay = useCallback(() => {\n    setIsPaused(false);\n    setIsSettingsOpen(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setIsPaused(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handlePlayPause = useCallback(\n    (e: KeyboardEvent) => {\n      const current: any = Spotlight.getCurrent();\n      if ((!current || !current.offsetHeight || !current.offsetWidth) && playerRef.current && isPauseByOKClickActive) {\n        const video: any = playerRef.current.getVideoNode();\n        video.playPause();\n        return false;\n      }\n    },\n    [playerRef, isPauseByOKClickActive],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n  const handleSettingsOpen = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(true);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n  const handleSettingsClose = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(false);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.play();\n    }\n  }, []);\n  const handlePauseButton = useCallback(() => {\n    if (playerRef.current) {\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (isPaused) {\n      timeoutId = setTimeout(() => {\n        setIsPaused(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPaused]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useButtonEffect('Back', handleTimeSync);\n  useButtonEffect('Blue', handleSettingsOpen);\n  useButtonEffect('Play', handleSettingsClose);\n  useButtonEffect('Pause', handlePauseButton);\n  useButtonEffect('Enter', handlePlayPause);\n  useButtonEffect('ArrowUp', handleSettingsOpen);\n\n  return (\n    <>\n      <Settings visible={isSettingsOpen} onClose={handleSettingsClose} player={playerRef} />\n      {isPaused && (\n        <div className=\"absolute z-10 top-0 px-4 pt-2 flex items-center\">\n          <BackButton className=\"mr-2\" />\n          <Text>{title}</Text>\n        </div>\n      )}\n      {isPaused && <Button className=\"absolute z-101 bottom-8 right-10 text-blue-600\" icon=\"settings\" onClick={handleSettingsOpen} />}\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        locale=\"ru\"\n        poster={poster}\n        title={description}\n        jumpBy={15}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        streamingType={streamingType}\n        isSettingsOpen={isSettingsOpen}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={<Media />}\n      />\n    </>\n  );\n};\n\nexport default Player;\n"],"sourceRoot":""}