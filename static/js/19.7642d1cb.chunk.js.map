{"version":3,"sources":["views/releases/releases.tsx","../node_modules/lodash/filter.js","../node_modules/lodash/uniqBy.js","../node_modules/lodash/_baseFindIndex.js","hooks/useInfiniteItems.ts","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","hooks/useApiInfinite.ts","../node_modules/lodash/flatMap.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_isFlattenable.js","containers/itemsListInfinite/itemsListInfinite.tsx","../node_modules/react-query/es/core/infiniteQueryObserver.js","../node_modules/react-query/es/react/useInfiniteQuery.js"],"names":["RELEASE_TYPES_MAP","popular","fresh","hot","ReleasesView","useParams","releaseType","queryResult","useApiInfinite","capitalize","total","useMemo","data","pages","pagination","total_items","seoTitle","getReleaseByType","title","className","map","releaseName","releaseKey","replace","active","href","generatePath","PATHS","Releases","arrayFilter","require","baseFilter","baseIteratee","isArray","module","exports","collection","predicate","baseUniq","array","iteratee","length","fromIndex","fromRight","index","useInfiniteItems","processItems","key","uniqKey","isLoading","isFetchingNextPage","fetchNextPage","useState","canFetchNextPage","setCanFetchNextPage","items","uniqBy","filter","flatMap","page","processedItems","handleLoadMore","useCallback","useEffect","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","comparator","includes","isCommon","result","seen","set","outer","value","computed","seenIndex","push","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","Set","noop","values","method","params","options","client","ApiClient","query","useInfiniteQuery","pageParam","getNextPageParam","lastPage","current","baseFlatten","baseEach","arrayPush","isFlattenable","depth","isStrict","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","undefined","ItemsListInfinite","showResult","fetchMore","loading","onScrollToEnd","InfiniteQueryObserver","_QueryObserver","call","this","_inheritsLoose","_proto","prototype","bindMethods","bind","fetchPreviousPage","setOptions","_extends","behavior","infiniteQueryBehavior","getOptimisticResult","fetch","cancelRefetch","throwOnError","meta","direction","createResult","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","state","hasNextPage","hasPreviousPage","isFetching","fetchMeta","isFetchingPreviousPage","QueryObserver","arg1","arg2","arg3","parseQueryArgs","useBaseQuery"],"mappings":"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","file":"static/js/19.7642d1cb.chunk.js","sourcesContent":["import { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport capitalize from 'lodash/capitalize';\nimport map from 'lodash/map';\n\nimport Link from 'components/link';\nimport Seo from 'components/seo';\nimport Text from 'components/text';\nimport ItemsListInfinite from 'containers/itemsListInfinite';\nimport useApiInfinite from 'hooks/useApiInfinite';\nimport { PATHS, RouteParams, generatePath } from 'routes';\n\nconst RELEASE_TYPES_MAP = {\n  popular: 'Популярные',\n  fresh: 'Свежие',\n  hot: 'Горячие',\n} as const;\n\ntype ReleaseTypes = keyof typeof RELEASE_TYPES_MAP;\n\nconst getReleaseByType = (releaseType?: ReleaseTypes) => {\n  return releaseType ? RELEASE_TYPES_MAP[releaseType] : RELEASE_TYPES_MAP.fresh;\n};\n\nconst ReleasesView: React.FC = () => {\n  const { releaseType = 'popular' } = useParams<RouteParams>();\n  const queryResult = useApiInfinite(`items${capitalize(releaseType) as Capitalize<ReleaseTypes>}`, ['1']);\n  const total = useMemo(() => queryResult.data?.pages?.[0]?.pagination?.total_items, [queryResult.data?.pages]);\n  const seoTitle = getReleaseByType(releaseType as ReleaseTypes);\n  const title = total ? `${seoTitle} (${total})` : seoTitle;\n\n  return (\n    <>\n      <Seo title={seoTitle} />\n      <ItemsListInfinite\n        title={\n          <>\n            <Text>{title}</Text>\n            <div className=\"flex\">\n              {map(RELEASE_TYPES_MAP, (releaseName, releaseKey) => (\n                <Link\n                  key={releaseKey}\n                  className=\"mr-2\"\n                  replace\n                  active={releaseType === releaseKey}\n                  href={generatePath(PATHS.Releases, { releaseType: releaseKey })}\n                >\n                  {releaseName}\n                </Link>\n              ))}\n            </div>\n          </>\n        }\n        queryResult={queryResult}\n      />\n    </>\n  );\n};\n\nexport default ReleasesView;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport filter from 'lodash/filter';\nimport flatMap from 'lodash/flatMap';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useApiInfinite from 'hooks/useApiInfinite';\n\ntype PageWithItems<T, K extends string> = {\n  [key in K]: T[];\n};\n\nexport type QueryResult = ReturnType<typeof useApiInfinite>;\n\nfunction useInfiniteItems<T, K extends string>(\n  queryResult: QueryResult,\n  processItems?: (items: T[]) => T[],\n  // @ts-expect-error\n  key: K = 'items',\n  uniqKey: string = 'id',\n) {\n  const { data, isLoading, isFetchingNextPage, fetchNextPage } = queryResult;\n  const [canFetchNextPage, setCanFetchNextPage] = useState(false);\n\n  const items = useMemo(\n    () => uniqBy(filter(flatMap<PageWithItems<T, K>, T>(data?.pages as unknown as PageWithItems<T, K>[], (page) => page[key])), uniqKey),\n    [data?.pages, key, uniqKey],\n  );\n  const processedItems = useMemo(() => (processItems ? processItems(items) : items), [items, processItems]);\n\n  const handleLoadMore = useCallback(() => {\n    if (canFetchNextPage) {\n      fetchNextPage();\n      setCanFetchNextPage(false);\n    }\n  }, [canFetchNextPage, fetchNextPage]);\n\n  useEffect(() => {\n    setCanFetchNextPage(true);\n  }, [items.length]);\n\n  return [processedItems, isLoading || isFetchingNextPage, handleLoadMore] as const;\n}\n\nexport default useInfiniteItems;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import { useMemo } from 'react';\nimport { UseInfiniteQueryOptions, useInfiniteQuery } from 'react-query';\n\nimport ApiClient, { PaginationResponse } from 'api';\n\nimport { Method, Methods } from './useApi';\n\nfunction useApiInfinite<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseInfiniteQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useInfiniteQuery<Methods[T], string, Methods[T]>(\n    [method, ...params],\n    ({ pageParam }) => {\n      // @ts-expect-error\n      return client[method](...params, pageParam) as Methods[T];\n    },\n    {\n      // @ts-expect-error\n      getNextPageParam: (lastPage: PaginationResponse) => {\n        return lastPage?.pagination?.current + 1 || 1;\n      },\n      ...options,\n    },\n  );\n\n  return query;\n}\n\nexport default useApiInfinite;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","import { Item } from 'api';\nimport ItemsList from 'components/itemsList';\nimport useInfiniteItems, { QueryResult } from 'hooks/useInfiniteItems';\n\ntype Props = {\n  title?: React.ReactNode;\n  showResult?: boolean;\n  queryResult: QueryResult;\n  processItems?: (items: Item[]) => Item[];\n};\n\nconst ItemsListInfinite: React.FC<Props> = ({ title, showResult = true, queryResult, processItems }) => {\n  const [items, isLoading, fetchMore] = useInfiniteItems(queryResult, processItems);\n\n  return <ItemsList title={title} items={items} loading={showResult && isLoading} onScrollToEnd={fetchMore} />;\n};\n\nexport default ItemsListInfinite;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }));\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var state = query.state;\n\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);","import { InfiniteQueryObserver } from '../core/infiniteQueryObserver';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useInfiniteQuery(arg1, arg2, arg3) {\n  var options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}"],"sourceRoot":""}