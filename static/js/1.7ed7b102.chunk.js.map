{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/millify/dist/options.js","../node_modules/millify/dist/utils.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/millify/dist/millify.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js"],"names":["unsupportedIterableToArray","module","exports","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","arrayLikeToArray","minLen","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","defineProperty","defaultOptions","decimalSeparator","lowercase","precision","space","units","roundTo","parseValue","val","parseFloat","isNaN","Error","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","RangeError","isFinite","isInteger","toFixed","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","options","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","result","getOptimisticResult","useEffect","current","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","data","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","divider","millify","options_1","require","utils_1","denominator","_a","opts","assign","prefix","Math","abs","unitIndex","rounded","unit","suffix","toLowerCase","formatted","replace","default","QueryObserver","_Subscribable","client","_this","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","keys","forEach","key","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_extends","meta","refetchPage","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","generateUID","counter","map","WeakMap","uid","item","index","has","set","createSource","source","useUIDState","context","quartz","getPrefix","getId","gen","useUID"],"mappings":"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","file":"static/js/1.7ed7b102.chunk.js","sourcesContent":["var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultOptions = void 0;\n/**\n * Default options for Millify.\n */\nexports.defaultOptions = {\n    decimalSeparator: \".\",\n    lowercase: false,\n    precision: 1,\n    space: false,\n    units: [\n        \"\",\n        \"K\",\n        \"M\",\n        \"B\",\n        \"T\",\n        \"P\",\n        \"E\", // Quintillion\n    ],\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.roundTo = exports.parseValue = void 0;\n/**\n * parseValue ensures the value is a number and within accepted range.\n */\nfunction parseValue(value) {\n    const val = parseFloat(value.toString());\n    if (isNaN(val)) {\n        throw new Error(`Input value is not a number`);\n    }\n    if (val > Number.MAX_SAFE_INTEGER || val < Number.MIN_SAFE_INTEGER) {\n        throw new RangeError(\"Input value is outside of safe integer range\");\n    }\n    return val;\n}\nexports.parseValue = parseValue;\n/**\n * Rounds a number [value] up to a specified [precision].\n */\nfunction roundTo(value, precision) {\n    if (!Number.isFinite(value)) {\n        throw new Error(\"Input value is not a finite number\");\n    }\n    if (!Number.isInteger(precision) || precision < 0) {\n        throw new Error(\"Precision is not a positive integer\");\n    }\n    if (Number.isInteger(value)) {\n        return value;\n    }\n    return parseFloat(value.toFixed(precision));\n}\nexports.roundTo = roundTo;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.millify = void 0;\nconst options_1 = require(\"./options\");\nconst utils_1 = require(\"./utils\");\n// Most commonly used digit grouping base.\nconst DIGIT_GROUPING_BASE = 1000;\n/**\n * Generator that divides a number until a decimal value is found.\n *\n * The denominator is defined by the numerical digit grouping base,\n * or interval. The most commonly-used digit group interval is 1000.\n *\n * e.g. 1,000,000 is grouped in multiples of 1000.\n */\nfunction* divider(value) {\n    // Create a mutable copy of the base.\n    let denominator = DIGIT_GROUPING_BASE;\n    while (true) {\n        const result = value / denominator;\n        if (result < 1) {\n            // End of operation. We can't divide the value any further.\n            return;\n        }\n        yield result;\n        // The denominator is increased every iteration by multiplying\n        // the base by itself, until a decimal value remains.\n        denominator *= DIGIT_GROUPING_BASE;\n    }\n}\n/**\n * millify converts long numbers to human-readable strings.\n */\nfunction millify(value, options) {\n    var _a;\n    // Override default options with options supplied by user.\n    const opts = options\n        ? Object.assign(Object.assign({}, options_1.defaultOptions), options) : options_1.defaultOptions;\n    if (!Array.isArray(opts.units) || !opts.units.length) {\n        throw new Error(\"Option `units` must be a non-empty array\");\n    }\n    // Validate value for type and length.\n    let val = utils_1.parseValue(value);\n    // Add a minus sign (-) prefix if it's a negative number.\n    const prefix = val < 0 ? \"-\" : \"\";\n    // Work only with positive values for simplicity's sake.\n    val = Math.abs(val);\n    // Keep dividing the input value by the digit grouping base\n    // until the decimal and the unit index is deciphered.\n    let unitIndex = 0;\n    for (const result of divider(val)) {\n        val = result;\n        unitIndex += 1;\n    }\n    // Return the original number if the number is too large to have\n    // a corresponding unit. Returning anything else is ambiguous.\n    const unitIndexOutOfRange = unitIndex >= opts.units.length;\n    if (unitIndexOutOfRange) {\n        return value.toString();\n    }\n    // Round decimal up to desired precision.\n    let rounded = utils_1.roundTo(val, opts.precision);\n    // Fixes an edge case bug that outputs certain numbers as 1000K instead of 1M.\n    // The rounded value needs another iteration in the divider cycle.\n    for (const result of divider(rounded)) {\n        rounded = result;\n        unitIndex += 1;\n    }\n    // Calculate the unit suffix and make it lowercase (if needed).\n    const unit = (_a = opts.units[unitIndex]) !== null && _a !== void 0 ? _a : \"\";\n    const suffix = opts.lowercase ? unit.toLowerCase() : unit;\n    // Add a space between number and abbreviation.\n    const space = opts.space ? \" \" : \"\";\n    // Replace decimal mark if desired.\n    const formatted = rounded\n        .toString()\n        .replace(options_1.defaultOptions.decimalSeparator, opts.decimalSeparator);\n    return `${prefix}${formatted}${space}${suffix}`;\n}\nexports.millify = millify;\nexports.default = millify;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (query.state.status !== 'error' || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n"],"sourceRoot":""}