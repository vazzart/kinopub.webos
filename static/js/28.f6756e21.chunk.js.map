{"version":3,"sources":["views/speed/speed.tsx","components/seo/seo.tsx","components/button/button.tsx","components/title/title.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/useQuery.js"],"names":["updateSpeedReducer","state","action","type","payload","SpeedView","data","useApi","useReducer","speed","setSpeed","useState","started","setStarted","loaded","setLoaded","error","setError","servers","useMemo","map","items","name","location","server","dlURL","ulURL","pingURL","getIpURL","workers","window","worker","_settings","test_order","xhr_dlMultistream","setSelectedServer","onupdate","testState","dlStatus","currentWorkerIndex","setCurrentWorkerIndex","handleStart","useCallback","handleStop","useEffect","onend","_state","start","abort","script","document","createElement","src","async","onload","onerror","head","appendChild","removeChild","title","className","length","id","icon","onClick","disabled","Seo","props","Helmet","defaultTitle","titleTemplate","Button","children","iconOnly","autoFocus","wrapperRef","useRef","frameId","requestAnimationFrame","current","node","focus","cancelAnimationFrame","ref","cx","role","Title","as","method","params","options","client","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","forceUpdate","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","result","getOptimisticResult","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","catch","undefined","isError","isFetching","notifyOnChangeProps","trackResult","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_extends","meta","refetchPage","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","onQueryUpdate","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","arg1","arg2","arg3","parsedOptions","parseQueryArgs"],"mappings":"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","file":"static/js/28.f6756e21.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useReducer, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Button from 'components/button';\nimport Seo from 'components/seo';\nimport Text from 'components/text';\nimport Title from 'components/title';\nimport useApi from 'hooks/useApi';\n\nfunction updateSpeedReducer(state: { [location: string]: string }, action: { type: string; payload: string }) {\n  return {\n    ...state,\n    [action.type]: action.payload,\n  };\n}\n\nconst SpeedView: React.FC = () => {\n  const { data } = useApi('serverLocations');\n  const [speed, setSpeed] = useReducer(updateSpeedReducer, {});\n  const [started, setStarted] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState('');\n\n  const servers = useMemo(\n    () =>\n      map(data?.items, ({ name, location }) => ({\n        name,\n        location,\n        server: `https://${location}-speed.streambox.in`,\n        dlURL: `/garbage.php`,\n        ulURL: `/empty.php`,\n        pingURL: `/empty.php`,\n        getIpURL: `/getIP.php`,\n      })),\n    [data?.items],\n  );\n  const workers = useMemo(() => {\n    // @ts-expect-error\n    if (!loaded && !window['Speedtest']) {\n      return [];\n    }\n\n    return map(servers, (server) => {\n      // @ts-expect-error\n      const worker = new window['Speedtest']();\n\n      worker._settings.test_order = 'IP_D';\n      worker._settings.xhr_dlMultistream = 1;\n\n      worker.setSelectedServer(server);\n\n      worker.onupdate = ({ testState, dlStatus }: { testState: number; dlStatus: string }) => {\n        setSpeed({\n          type: server.location,\n          payload: dlStatus || ((testState === 1 || testState === 2) && 'Начинаем') || '',\n        });\n      };\n\n      return worker;\n    });\n  }, [servers, setSpeed, loaded]);\n  const [currentWorkerIndex, setCurrentWorkerIndex] = useState(0);\n\n  const handleStart = useCallback(() => {\n    setStarted(true);\n    setCurrentWorkerIndex(0);\n  }, []);\n\n  const handleStop = useCallback(() => {\n    setStarted(false);\n  }, []);\n\n  useEffect(() => {\n    if (workers[currentWorkerIndex]) {\n      if (started) {\n        workers[currentWorkerIndex].onend = () => {\n          setCurrentWorkerIndex(currentWorkerIndex + 1);\n        };\n\n        if (workers[currentWorkerIndex]._state !== 3) {\n          workers[currentWorkerIndex].start();\n        }\n      } else {\n        if (workers[currentWorkerIndex]._state === 3) {\n          workers[currentWorkerIndex].abort();\n        }\n      }\n    } else {\n      handleStop();\n    }\n  }, [started, workers, currentWorkerIndex, handleStop]);\n\n  useEffect(() => {\n    return () => {\n      handleStop();\n    };\n  }, [handleStop]);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = './speedtest.js';\n    script.async = true;\n    script.onload = () => {\n      setLoaded(true);\n    };\n    script.onerror = (error) => {\n      setError(`Не удалось загрузить скрипт для замера скорости: ${error}`);\n    };\n\n    document.head.appendChild(script);\n\n    return () => {\n      document.head.removeChild(script);\n    };\n  }, []);\n\n  return (\n    <>\n      <Seo title=\"Проверка скорости\" />\n      <Title className=\"mb-10\">Проверка скорости</Title>\n\n      {error ? (\n        <div className=\"m-1 mb-10\">\n          <Text className=\"text-red-600\">{error}</Text>\n        </div>\n      ) : (\n        loaded &&\n        servers.length > 0 &&\n        !workers.length && (\n          <div className=\"m-1 mb-10\">\n            <Text className=\"text-red-600\">Не удалось создать ни одного воркера для замера скорости</Text>\n          </div>\n        )\n      )}\n\n      <div className=\"flex justify-around\">\n        {map(data?.items, (location) => (\n          <div className={`flex flex-col items-center w-1/${data?.items.length}`} key={location.id}>\n            <Text>{location.name}</Text>\n            {speed[location.location] || '0.00'}\n            <Text>Mbit/s</Text>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex justify-center pt-12\">\n        {started ? (\n          <Button icon=\"stop\" onClick={handleStop}>\n            Стоп\n          </Button>\n        ) : (\n          <Button icon=\"play_arrow\" onClick={handleStart} disabled={!workers.length}>\n            Начать\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SpeedView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\nexport type ButtonProps = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<ButtonProps> = ({ children, icon, iconOnly = !children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import cx from 'classnames';\n\nimport Text, { TextProps } from 'components/text';\n\ntype Props = {} & TextProps;\n\nconst Title: React.FC<Props> = ({ children, className, ...props }) => {\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <Text {...props} className={cx('flex justify-between items-center mx-2 my-1 mb-3 min-h-9', className)} as=\"div\">\n      {children}\n    </Text>\n  );\n};\n\nexport default Title;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (query.state.status !== 'error' || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"sourceRoot":""}