{"version":3,"sources":["../node_modules/use-debounce/esm/useThrottledCallback.js","../node_modules/use-debounce/esm/useDebouncedCallback.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/lodash/filter.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_baseFilter.js","../node_modules/react-query/es/react/useQuery.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/toInteger.js"],"names":["useThrottledCallback","func","wait","_a","_b","_c","leading","_d","trailing","options","_this","this","lastCallTime","useRef","lastInvokeTime","timerId","lastArgs","lastThis","result","funcRef","mounted","current","useRAF","window","TypeError","maxing","maxWait","Math","max","useEffect","useMemo","invokeFunc","time","args","thisArg","apply","startTimer","pendingFunc","cancelAnimationFrame","requestAnimationFrame","setTimeout","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","trailingEdge","timerExpired","Date","now","timeWaiting","remainingWait","min","_i","arguments","length","isInvoking","cancel","clearTimeout","isPending","flush","useDebouncedCallback","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","getOptimisticResult","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","data","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","arrayFilter","require","baseFilter","baseIteratee","isArray","module","exports","collection","predicate","array","fromIndex","fromRight","index","baseEach","value","push","useQuery","arg1","arg2","arg3","parsedOptions","parseQueryArgs","QueryObserver","_Subscribable","client","call","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_extends","meta","refetchPage","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","toNumber","INFINITY","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","test","slice","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","charAt","baseFindIndex","toInteger","nativeMax","toFinite","remainder"],"mappings":"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","file":"static/js/23.4e4136f2.chunk.js","sourcesContent":["import useDebouncedCallback from './useDebouncedCallback';\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame). The throttled function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * const scrollHandler = useThrottledCallback(updatePosition, 100)\n * window.addEventListener('scroll', scrollHandler)\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const { callback } = useThrottledCallback(renewToken, 300000, { 'trailing': false })\n * <button onClick={callback}>click</button>\n *\n * // Cancel the trailing throttled invocation.\n * window.addEventListener('popstate', throttled.cancel);\n */\nexport default function useThrottledCallback(func, wait, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.leading, leading = _c === void 0 ? true : _c, _d = _b.trailing, trailing = _d === void 0 ? true : _d;\n    return useDebouncedCallback(func, wait, {\n        maxWait: wait,\n        leading: leading,\n        trailing: trailing,\n    });\n}\n","import { useRef, useEffect, useMemo } from 'react';\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport default function useDebouncedCallback(func, wait, options) {\n    var _this = this;\n    var lastCallTime = useRef(null);\n    var lastInvokeTime = useRef(0);\n    var timerId = useRef(null);\n    var lastArgs = useRef([]);\n    var lastThis = useRef();\n    var result = useRef();\n    var funcRef = useRef(func);\n    var mounted = useRef(true);\n    funcRef.current = func;\n    // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n    var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n    if (typeof func !== 'function') {\n        throw new TypeError('Expected a function');\n    }\n    wait = +wait || 0;\n    options = options || {};\n    var leading = !!options.leading;\n    var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n    var maxing = 'maxWait' in options;\n    var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n    useEffect(function () {\n        mounted.current = true;\n        return function () {\n            mounted.current = false;\n        };\n    }, []);\n    // You may have a question, why we have so many code under the useMemo definition.\n    //\n    // This was made as we want to escape from useCallback hell and\n    // not to initialize a number of functions each time useDebouncedCallback is called.\n    //\n    // It means that we have less garbage for our GC calls which improves performance.\n    // Also, it makes this library smaller.\n    //\n    // And the last reason, that the code without lots of useCallback with deps is easier to read.\n    // You have only one place for that.\n    var debounced = useMemo(function () {\n        var invokeFunc = function (time) {\n            var args = lastArgs.current;\n            var thisArg = lastThis.current;\n            lastArgs.current = lastThis.current = null;\n            lastInvokeTime.current = time;\n            return (result.current = funcRef.current.apply(thisArg, args));\n        };\n        var startTimer = function (pendingFunc, wait) {\n            if (useRAF)\n                cancelAnimationFrame(timerId.current);\n            timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n        };\n        var shouldInvoke = function (time) {\n            if (!mounted.current)\n                return false;\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            // Either this is the first call, activity has stopped and we're at the\n            // trailing edge, the system time has gone backwards and we're treating\n            // it as the trailing edge, or we've hit the `maxWait` limit.\n            return (!lastCallTime.current ||\n                timeSinceLastCall >= wait ||\n                timeSinceLastCall < 0 ||\n                (maxing && timeSinceLastInvoke >= maxWait));\n        };\n        var trailingEdge = function (time) {\n            timerId.current = null;\n            // Only invoke if we have `lastArgs` which means `func` has been\n            // debounced at least once.\n            if (trailing && lastArgs.current) {\n                return invokeFunc(time);\n            }\n            lastArgs.current = lastThis.current = null;\n            return result.current;\n        };\n        var timerExpired = function () {\n            var time = Date.now();\n            if (shouldInvoke(time)) {\n                return trailingEdge(time);\n            }\n            // https://github.com/xnimorz/use-debounce/issues/97\n            if (!mounted.current) {\n                return;\n            }\n            // Remaining wait calculation\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            var timeWaiting = wait - timeSinceLastCall;\n            var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n            // Restart the timer\n            startTimer(timerExpired, remainingWait);\n        };\n        var func = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var time = Date.now();\n            var isInvoking = shouldInvoke(time);\n            lastArgs.current = args;\n            lastThis.current = _this;\n            lastCallTime.current = time;\n            if (isInvoking) {\n                if (!timerId.current && mounted.current) {\n                    // Reset any `maxWait` timer.\n                    lastInvokeTime.current = lastCallTime.current;\n                    // Start the timer for the trailing edge.\n                    startTimer(timerExpired, wait);\n                    // Invoke the leading edge.\n                    return leading ? invokeFunc(lastCallTime.current) : result.current;\n                }\n                if (maxing) {\n                    // Handle invocations in a tight loop.\n                    startTimer(timerExpired, wait);\n                    return invokeFunc(lastCallTime.current);\n                }\n            }\n            if (!timerId.current) {\n                startTimer(timerExpired, wait);\n            }\n            return result.current;\n        };\n        func.cancel = function () {\n            if (timerId.current) {\n                useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n            }\n            lastInvokeTime.current = 0;\n            lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n        };\n        func.isPending = function () {\n            return !!timerId.current;\n        };\n        func.flush = function () {\n            return !timerId.current ? result.current : trailingEdge(Date.now());\n        };\n        return func;\n    }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n    return debounced;\n}\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (query.state.status !== 'error' || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n"],"sourceRoot":""}