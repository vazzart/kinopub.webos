{"version":3,"sources":["components/bookmarkItem/bookmarkItem.tsx","components/bookmarksList/bookmarksList.tsx","views/booksmarks/booksmarks.tsx","hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","components/seo/seo.tsx","components/title/title.tsx","components/lazy/lazy.tsx","components/imageItem/imageItem.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/useQuery.js"],"names":["BookmarkItem","bookmark","history","className","useHistory","source","useMemo","count","handleOnClick","useCallback","id","push","generatePath","PATHS","Bookmark","bookmarkId","title","onClick","caption","BookmarksList","bookmarks","loading","onScrollToEnd","scrollable","content","map","Array","_","idx","BooksmarksView","useApi","data","isLoading","items","useInViewport","target","props","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","ScrollableContext","createContext","Scrollable","children","footerRef","value","cx","Provider","ref","Seo","Helmet","defaultTitle","titleTemplate","Title","as","Lazy","scrollableId","useContext","once","offset","scrollContainer","placeholder","ImageItem","wrapperClassName","src","alt","method","params","client","ApiClient","query","useQuery","arg1","arg2","arg3","parsedOptions","parseQueryArgs","useBaseQuery","QueryObserver"],"mappings":"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","file":"static/js/27.9d2e8edf.chunk.js","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bookmark } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  bookmark?: Bookmark;\n  className?: string;\n};\n\nconst BookmarkItem: React.FC<Props> = ({ bookmark, className }) => {\n  const history = useHistory();\n  const source = useMemo(\n    () => (bookmark ? `https://dummyimage.com/250x200/222/fff.png&text=${`Фильмов ${bookmark.count}`}` : ''),\n    [bookmark],\n  );\n  const handleOnClick = useCallback(() => {\n    if (bookmark?.id) {\n      history.push(\n        generatePath(PATHS.Bookmark, {\n          bookmarkId: bookmark.id,\n        }),\n        {\n          bookmark,\n          title: bookmark.title,\n        },\n      );\n    }\n  }, [bookmark, history]);\n\n  return <ImageItem onClick={handleOnClick} source={source} caption={bookmark?.title} />;\n};\n\nexport default BookmarkItem;\n","import React from 'react';\nimport map from 'lodash/map';\n\nimport { Bookmark } from 'api';\nimport BookmarkItem from 'components/bookmarkItem';\nimport Scrollable from 'components/scrollable';\nimport Title from 'components/title';\n\ntype Props = {\n  title?: string;\n  bookmarks?: Bookmark[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n};\n\nconst BookmarksList: React.FC<Props> = ({ title, bookmarks, loading, onScrollToEnd, scrollable = true }) => {\n  const content = (\n    <div>\n      <Title>{title}</Title>\n      <div className=\"flex flex-wrap pr-2\">\n        {map(bookmarks, (bookmark) => (\n          <BookmarkItem key={bookmark.id} bookmark={bookmark} />\n        ))}\n        {loading && map([...new Array(20)], (_, idx) => <BookmarkItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default BookmarksList;\n","import BookmarksList from 'components/bookmarksList';\nimport Seo from 'components/seo';\nimport useApi from 'hooks/useApi';\n\nconst BooksmarksView: React.FC = () => {\n  const { data, isLoading } = useApi('bookmarks');\n  const title = 'Закладки';\n\n  return (\n    <>\n      <Seo title={title} />\n      <BookmarksList title={title} bookmarks={data?.items} loading={isLoading} />\n    </>\n  );\n};\n\nexport default BooksmarksView;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props} id={id}>\n      <ScrollableContext.Provider value={value}>{children}</ScrollableContext.Provider>\n      {onScrollToEnd && <div className=\"h-40\" ref={footerRef} />}\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import cx from 'classnames';\n\nimport Text, { TextProps } from 'components/text';\n\ntype Props = {} & TextProps;\n\nconst Title: React.FC<Props> = ({ children, className, ...props }) => {\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <Text {...props} className={cx('flex justify-between items-center mx-2 my-1 mb-3 min-h-9', className)} as=\"div\">\n      {children}\n    </Text>\n  );\n};\n\nexport default Title;\n","import { useContext } from 'react';\nimport LazyLoad, { LazyLoadProps } from 'react-lazyload';\n\nimport { ScrollableContext } from 'components/scrollable';\n\ntype Props = {\n  className?: string;\n} & Omit<LazyLoadProps, 'placeholder'>;\n\nconst Lazy: React.FC<Props> = (props) => {\n  const { id: scrollableId } = useContext(ScrollableContext);\n\n  return (\n    <LazyLoad\n      once\n      offset={100}\n      scrollContainer={scrollableId && `#${scrollableId}`}\n      {...props}\n      placeholder={<div className=\"w-full h-full\" />}\n    />\n  );\n};\n\nexport function withLazy(options: Props) {\n  return function WithLazy<P>(Component: React.ComponentType<P>): React.FC<P> {\n    return (props: P) => (\n      <Lazy {...options}>\n        <Component {...props} />\n      </Lazy>\n    );\n  };\n}\n\nexport default Lazy;\n","import cx from 'classnames';\n\nimport Lazy from 'components/lazy';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/5 cursor-pointer', wrapperClassName)}>\n      <Lazy className={cx('h-40 m-1 flex flex-col relative', className)}>\n        <img\n          loading=\"lazy\"\n          className=\"w-full h-full object-cover rounded-xl border-2 border-gray-300 bg-gray-300\"\n          src={source}\n          alt={caption}\n        />\n\n        {children}\n      </Lazy>\n      {caption && (\n        <div className=\"px-2\">\n          <p className=\"text-gray-200 text-sm text-center overflow-hidden overflow-ellipsis whitespace-nowrap\">{caption}</p>\n        </div>\n      )}\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"sourceRoot":""}